"use strict";(self.webpackChunkblog_never_del=self.webpackChunkblog_never_del||[]).push([[827],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>h});var a=t(7294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var o=a.createContext({}),p=function(e){var n=a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},m=function(e){var n=p(e.components);return a.createElement(o.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,l=e.mdxType,r=e.originalType,o=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),u=p(t),h=l,d=u["".concat(o,".").concat(h)]||u[h]||c[h]||r;return t?a.createElement(d,i(i({ref:n},m),{},{components:t})):a.createElement(d,i({ref:n},m))}));function h(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var r=t.length,i=new Array(r);i[0]=u;var s={};for(var o in n)hasOwnProperty.call(n,o)&&(s[o]=n[o]);s.originalType=e,s.mdxType="string"==typeof e?e:l,i[1]=s;for(var p=2;p<r;p++)i[p]=t[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},8057:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var a=t(7462),l=(t(7294),t(3905));const r={sidebar_position:2930,title:"\ud83c\udfaa\ud83c\udfaa\ud83d\udc2c\u2638\ufe0f\u2638\ufe0f1\ufe0f\u20e3 Helm \u279c Basic"},i="Helm Basic",s={unversionedId:"\ud83c\udfaa\ud83c\udfaa \ud83d\udc2c\u2638\ufe0f\u2638\ufe0f-1\ufe0f\u20e3 Helm \u279c Basic",id:"\ud83c\udfaa\ud83c\udfaa \ud83d\udc2c\u2638\ufe0f\u2638\ufe0f-1\ufe0f\u20e3 Helm \u279c Basic",title:"\ud83c\udfaa\ud83c\udfaa\ud83d\udc2c\u2638\ufe0f\u2638\ufe0f1\ufe0f\u20e3 Helm \u279c Basic",description:"https://www.youtube.com/watch?v=6mHgb3cDOjU&list=PLmOn9nNkQxJHYUm2zkuf97XJJT8kzAph&index=45&abchannel=%E5%B0%9A%E7%A1%85%E8%B0%B7IT%E5%9F%B9%E8%AE%AD%E5%AD%A6%E6%A0%A1",source:"@site/docs/\ud83c\udfaa\ud83c\udfaa \ud83d\udc2c\u2638\ufe0f\u2638\ufe0f-1\ufe0f\u20e3 Helm \u279c Basic.md",sourceDirName:".",slug:"/\ud83c\udfaa\ud83c\udfaa \ud83d\udc2c\u2638\ufe0f\u2638\ufe0f-1\ufe0f\u20e3 Helm \u279c Basic",permalink:"/\ud83c\udfaa\ud83c\udfaa \ud83d\udc2c\u2638\ufe0f\u2638\ufe0f-1\ufe0f\u20e3 Helm \u279c Basic",draft:!1,tags:[],version:"current",sidebarPosition:2930,frontMatter:{sidebar_position:2930,title:"\ud83c\udfaa\ud83c\udfaa\ud83d\udc2c\u2638\ufe0f\u2638\ufe0f1\ufe0f\u20e3 Helm \u279c Basic"},sidebar:"defaultSidebar",previous:{title:"\ud83c\udfaa\ud83c\udfaa\ud83d\udc2c\u2638\ufe0f\u2638\ufe0f0\ufe0f\u20e3 K8s \u279c Misc.9",permalink:"/\ud83c\udfaa\ud83c\udfaa \ud83d\udc2c\u2638\ufe0f\u2638\ufe0f-0\ufe0f\u20e3 K8s \u279c Basic.9 Misc"},next:{title:"\ud83c\udfaa\ud83c\udfaa\ud83d\udc2c\u2638\ufe0f\u2638\ufe0f1\ufe0f\u20e3 Helm \u279c Demo",permalink:"/\ud83c\udfaa\ud83c\udfaa \ud83d\udc2c\u2638\ufe0f\u2638\ufe0f-1\ufe0f\u20e3 Helm \u279c Demo"}},o={},p=[],m={toc:p};function c(e){let{components:n,...t}=e;return(0,l.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"helm-basic"},"Helm Basic"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"https://www.youtube.com/watch?v=6mHgb3cDOjU&list=PLmOn9nNkQxJHYUm2zkuf9_7XJJT8kzAph&index=45&ab_channel=%E5%B0%9A%E7%A1%85%E8%B0%B7IT%E5%9F%B9%E8%AE%AD%E5%AD%A6%E6%A0%A1\n")),(0,l.kt)("p",null,"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35 Hlem Install "),(0,l.kt)("p",null,"\ud83d\udd35 K8s tool"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"\ud83d\udd36 K8s APP-GUI  \u279c lens  \u279c manager local+remote cluster.  \u279c best \n\ud83d\udd36 K8s CMD-GUI  \u279c k9s   \u279c manager local cluster.\n\ud83d\udd36 K8s package  \u279c helm  \u279c like apt.  make k8s deploy pod very easy.\n\n\n    \ud83d\udd3b lens enable prometheus \u2705\n\n        lens have builded in promethes\n        but you need able it for all cluster.\n\n        cluster >> setting >> lens metric >> enable all >> restart app \n")),(0,l.kt)("p",null,"\ud83d\udd35 Helm Desc "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"\ud83d\udcd7 manual   https://helm.sh/zh/docs/topics/charts/\n\ud83d\udcd7 manual   https://helm.sh/zh/docs/topics/charts/\n\ud83d\udcd7 manual   https://helm.sh/zh/docs/topics/charts/\n\n\nhelm prepair almost all for you. \n    but helm is temple! \n    temple means you have to change some config before use it .\n\n    \ud83d\udd25 helm-V3 is for local cluster. not for remote manage.\n        - k8s manager node:      install helm \n        - k3s maneger node:      install helm \n        - minikube    node:      install helm \n")),(0,l.kt)("p",null,"\ud83d\udd35 Helm basic "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"helm    \u279c mamage app \nchart   \u279c app         (exe dmg )\nrepo    \u279c app storage (where to doanload app) \nrelease \u279c app vision  (like git version )\n")),(0,l.kt)("p",null,"\ud83d\udd35 Helm Use"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"install helm to cluster maneger node.\n\nadd helm app repo  then install helm app\n\nconfig app & run \n")),(0,l.kt)("p",null,"\ud83d\udd35 Hlem install"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'\ud83d\udd36 mac \n\n    brew install helm\n    helm repo add bitnami https://charts.bitnami.com/bitnami\n    helm repo update\n\n\n\ud83d\udd36 Ubuntu - apt \n\n    curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null\n    sudo apt-get install apt-transport-https --yes\n    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list\n    sudo apt-get update\n    sudo apt-get install helm\n')),(0,l.kt)("p",null,"\ud83d\udd35 Helm search app "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"\ud83d\udd36 use cmd    \ud83d\udc4e\n\n    helm search hub  xxx   \u279c  search in allavailable    repo \n    helm search repo xxx   \u279c  search in installed ready repo \n\n\n\ud83d\udd36 use website \ud83d\udc4d\n\n    https://artifacthub.io/packages/search?kind=0&sort=relevance&page=1\n        website. tell you how install & config \n")),(0,l.kt)("p",null,"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35 Helm app Strecture "),(0,l.kt)("p",null,"\ud83d\udd35 app importent files \u2705"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"chart.yaml        \u279c  app info:          \u279c app name / version / url / maintainer email \nrequirements.yaml \u279c  app depends:       \u279c if need mysql etc. \nvalue.yaml        \u279c  app default value  \u279c docker port / username / \n")),(0,l.kt)("p",null,"\ud83d\udd35 global value  "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"app is dependet. like docker. \nbut some time you need other app can visit something in out app.\nso you can use global value for that you need share out.\n")),(0,l.kt)("p",null,"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35"),(0,l.kt)("p",null,"\ud83d\udd35 available vaule - check how \u2705"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"app only allow you change some value. \ndepends on how the helm app is created.\n\nevery app is different available value. \nyou have to check in helm app`s website.\n\n\n    \ud83d\udd3b use web \ud83d\udc4d \n        https://artifacthub.io/packages/helm/bitnami/nginx\n        https://artifacthub.io/packages/helm/bitnami/nginx?modal=values\n\n            you can check all info in web. no need cmd. \n\n\n    \ud83d\udd3b use cmd \ud83d\udc4e\n        -- use cmd must add repo first. then check \n\n        helm repo add bitnami https://charts.bitnami.com/bitnami\n        helm show values bitnami/nginx\n\n        helm repo add bitnami https://charts.bitnami.com/bitnami\n        helm show values bitnami/mariadb\n")),(0,l.kt)("p",null,"\ud83d\udd35 available vaule - check demo "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"https://artifacthub.io/packages/helm/bitnami/nginx\n\n    Traffic Exposure parameters\n    service.ports.http  80\n")),(0,l.kt)("p",null,"\ud83d\udd35 custom value "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"two way to set your custom value.   \n    -f    \u279c use yaml file \n    --set \u279c use cmd \n\n\ud83d\udd36 set demo \n\n    helm install my-nginx bitnami/nginx --set xxx=yyy\n    helm install my-nginx bitnami/nginx --set service.ports.http=880\n    helm install my-nginx bitnami/nginx --set service.ports.http=880,service.ports.https=8443\n\n\n\ud83d\udd36 yaml demo \n\n    helm install my-nginx bitnami/nginx -f xxx.yaml \n    helm install my-nginx bitnami/nginx -f config-nginx.yaml \n\n\n        cat <<EOF>  config-nginx.yaml\n        service.ports.http: 880,\n        service.ports.https: 8443,\n        EOF\n\n        http:172.16.1.33:880\n        https:172.16.1.33:8443\n")))}c.isMDXComponent=!0}}]);
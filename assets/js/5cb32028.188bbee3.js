"use strict";(self.webpackChunkblog_never_del=self.webpackChunkblog_never_del||[]).push([[1393],{3905:(n,e,t)=>{t.d(e,{Zo:()=>s,kt:()=>m});var r=t(7294);function a(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function o(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function l(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach((function(e){a(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function p(n,e){if(null==n)return{};var t,r,a=function(n,e){if(null==n)return{};var t,r,a={},o=Object.keys(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||(a[t]=n[t]);return a}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(a[t]=n[t])}return a}var d=r.createContext({}),i=function(n){var e=r.useContext(d),t=e;return n&&(t="function"==typeof n?n(e):l(l({},e),n)),t},s=function(n){var e=i(n.components);return r.createElement(d.Provider,{value:e},n.children)},c={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},u=r.forwardRef((function(n,e){var t=n.components,a=n.mdxType,o=n.originalType,d=n.parentName,s=p(n,["components","mdxType","originalType","parentName"]),u=i(t),m=a,A=u["".concat(d,".").concat(m)]||u[m]||c[m]||o;return t?r.createElement(A,l(l({ref:e},s),{},{components:t})):r.createElement(A,l({ref:e},s))}));function m(n,e){var t=arguments,a=e&&e.mdxType;if("string"==typeof n||a){var o=t.length,l=new Array(o);l[0]=u;var p={};for(var d in e)hasOwnProperty.call(e,d)&&(p[d]=e[d]);p.originalType=n,p.mdxType="string"==typeof n?n:a,l[1]=p;for(var i=2;i<o;i++)l[i]=t[i];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},8232:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>d,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>p,toc:()=>i});var r=t(7462),a=(t(7294),t(3905));const o={sidebar_position:4930,title:"\ud83c\udfaa\ud83c\udfaa\ud83c\udfaa\ud83c\udfaa-\ud83d\udd10\ud83d\udd10 Auth \u279c\u279c OpenLDAP"},l="Auth \u279c OpenLDAP",p={unversionedId:"\ud83c\udfaa\ud83c\udfaa\ud83c\udfaa\ud83c\udfaa-\ud83d\udd10\ud83d\udd10 Auth \u279c\u279c LDAP",id:"\ud83c\udfaa\ud83c\udfaa\ud83c\udfaa\ud83c\udfaa-\ud83d\udd10\ud83d\udd10 Auth \u279c\u279c LDAP",title:"\ud83c\udfaa\ud83c\udfaa\ud83c\udfaa\ud83c\udfaa-\ud83d\udd10\ud83d\udd10 Auth \u279c\u279c OpenLDAP",description:"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35 openLDAP.  basic",source:"@site/docs/\ud83c\udfaa\ud83c\udfaa\ud83c\udfaa\ud83c\udfaa-\ud83d\udd10\ud83d\udd10 Auth \u279c\u279c LDAP.md",sourceDirName:".",slug:"/\ud83c\udfaa\ud83c\udfaa\ud83c\udfaa\ud83c\udfaa-\ud83d\udd10\ud83d\udd10 Auth \u279c\u279c LDAP",permalink:"/\ud83c\udfaa\ud83c\udfaa\ud83c\udfaa\ud83c\udfaa-\ud83d\udd10\ud83d\udd10 Auth \u279c\u279c LDAP",draft:!1,tags:[],version:"current",sidebarPosition:4930,frontMatter:{sidebar_position:4930,title:"\ud83c\udfaa\ud83c\udfaa\ud83c\udfaa\ud83c\udfaa-\ud83d\udd10\ud83d\udd10 Auth \u279c\u279c OpenLDAP"},sidebar:"defaultSidebar",previous:{title:"\ud83c\udfaa\ud83c\udfaa\ud83c\udfaa\ud83c\udfaa-\ud83d\udd10 Auth",permalink:"/\ud83c\udfaa\ud83c\udfaa\ud83c\udfaa\ud83c\udfaa-\ud83d\udd10  Auth \u279c Basic"},next:{title:"\ud83c\udfaa\ud83c\udfaa\ud83c\udfaa\ud83c\udfaa-\ud83d\udd10\ud83d\udd10 Auth \u279c\u279c radius",permalink:"/\ud83c\udfaa\ud83c\udfaa\ud83c\udfaa\ud83c\udfaa-\ud83d\udd10\ud83d\udd10 Auth \u279c\u279c Radius"}},d={},i=[],s={toc:i};function c(n){let{components:e,...t}=n;return(0,a.kt)("wrapper",(0,r.Z)({},s,t,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"auth--openldap"},"Auth \u279c OpenLDAP"),(0,a.kt)("p",null,"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35 openLDAP.  basic "),(0,a.kt)("p",null,"no need database. "),(0,a.kt)("p",null,"\ud83d\udd35 LDAP Desc Detail\ud83d\udcaf"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"\ud83d\udd36 LDAP Desc \n\n    ldap is just like domain/url \n    domain must have two parts. do ladp must have 2+ dc.\n    and you can set sub ldap too.  just like sub domain\n\n        root domain:  *.0214.ark     \u279c dc=0214,dc=ark\n        sub  domain:  xx.0214.ark    \u279c dc=xx,dc=0214,dc=ark\n\n    CN. OU  is just like folder/file \n        CN=test,OU=developer,DC=rv,DC=ark\n            cn:  a file    named test\n            ou:  a folder  named developer\n\n        if you need find file/cn \n            use this\n                CN=test,OU=developer,DC=rv,DC=ark\n\n\n\n\n\ud83d\udd36 Create a Domain\n\n    \u25ce LDAP  domain:      xxx.yyy          rv.ark \n    \u25ce LDAP_BASE_DN:      dc=xxx,dc=yyy    dc=rv,dc=ark\n\n\n\ud83d\udd36 Domain tree demo \n\n    dc=rv,dc=ark\n        cn=file_0\n        ou=Folder_1\n            cn=file_1\n        ou=Folder_2\n            cn=file_21\n            cn=file_22\n\n\ud83d\udd36 DC OU CN \n    \n    DC( like root /):  top of ldap \n    OU( like folder):  ... \n    CN( like file  ):  end of ldap\n        you must have CN.\n        you can  have OU\n        you can  have lots OU\n        file can under root  (DC)\n        file can under foler (OU)\n\n\n    \u203c\ufe0f every cn have his own unique path   cn-dc   cn-ou-dc  \u203c\ufe0f \n    \u203c\ufe0f every cn have his own unique path   cn-dc   cn-ou-dc  \u203c\ufe0f \n    \u203c\ufe0f every cn have his own unique path   cn-dc   cn-ou-dc  \u203c\ufe0f \n\n\n\n\ud83d\udd36 DN /  base_dn\n    Distinguished Name         \u279c  file cn`s path   \u279c\n    Base Distinguished Name    \u279c  root`s path      \u279c   dc=rv,dc=ark\n")),(0,a.kt)("p",null,"\ud83d\udd35 database prepair "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"\ud83d\udd36 needs \n\n    i have mariadb already.\n    i use same mariadb for all docker.\n    so i not create new mariadb. i use what i have already.\n\n    ldap db:             dbldap\n    ldap user:           userldap\n    ldap user password:  userldappassword\n    set permit:  let user: userldap  can only visit dbldap\n\n\n\ud83d\udd36 cmd \n\n    MariaDB [(none)]> CREATE DATABASE dbldap;\n    MariaDB [(none)]> CREATE USER 'userldap'@'%' IDENTIFIED BY 'password';\n    MariaDB [(none)]> GRANT ALL PRIVILEGES ON dbldap.* TO 'userldap'@'%';\n    MariaDB [(none)]> show databases;\n")),(0,a.kt)("p",null,"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35 openLDAP. Docker demo  - prepair\n\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35 openLDAP. Docker demo  - prepair\n\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35 openLDAP. Docker demo  - prepair "),(0,a.kt)("p",null,"\ud83d\udd35 Other Demo\n",(0,a.kt)("a",{parentName:"p",href:"https://gist.github.com/thomasdarimont/d22a616a74b45964106461efb948df9c"},"https://gist.github.com/thomasdarimont/d22a616a74b45964106461efb948df9c")),(0,a.kt)("p",null,"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35 worked demo 1"),(0,a.kt)("p",null,"\u2b50\ufe0f only change domain & password. no other \u2b50\ufe0f"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'    version: \'3\'\n    services:\n    openldap:\n        image: osixia/openldap:latest\n        container_name: openldap\n        domainname: "rv.ark"\n        hostname: "openldap"\n        environment:\n        LDAP_LOG_LEVEL: "256"\n        LDAP_ORGANISATION: "RVLAB Inc."\n        LDAP_DOMAIN: "rv.ark"\n        LDAP_BASE_DN: "dc=rv,dc=ark"\n        LDAP_ADMIN_PASSWORD: "changeme"\n        LDAP_CONFIG_PASSWORD: "changeme"\n        LDAP_READONLY_USER: "false"\n        LDAP_READONLY_USER_USERNAME: "readonly"\n        LDAP_READONLY_USER_PASSWORD: "readonly"\n        LDAP_RFC2307BIS_SCHEMA: "false"\n        LDAP_BACKEND: "mdb"\n        LDAP_TLS: "true"\n        LDAP_TLS_CRT_FILENAME: "ldap.crt"\n        LDAP_TLS_KEY_FILENAME: "ldap.key"\n        LDAP_TLS_CA_CRT_FILENAME: "ca.crt"\n        LDAP_TLS_ENFORCE: "false"\n        LDAP_TLS_CIPHER_SUITE: "SECURE256:-VERS-SSL3.0"\n        LDAP_TLS_PROTOCOL_MIN: "3.1"\n        LDAP_TLS_VERIFY_CLIENT: "demand"\n        LDAP_REPLICATION: "false"\n        #LDAP_REPLICATION_CONFIG_SYNCPROV: "binddn="cn=admin,cn=config" bindmethod=simple credentials=$LDAP_CONFIG_PASSWORD searchbase="cn=config" type=refreshAndPersist retry="60 +" timeout=1 starttls=critical"\n        #LDAP_REPLICATION_DB_SYNCPROV: "binddn="cn=admin,$LDAP_BASE_DN" bindmethod=simple credentials=$LDAP_ADMIN_PASSWORD searchbase="$LDAP_BASE_DN" type=refreshAndPersist interval=00:00:00:10 retry="60 +" timeout=1 starttls=critical"\n        #docker-compose.ymlLDAP_REPLICATION_HOSTS: "#PYTHON2BASH:[\'ldap://ldap.example.org\',\'ldap://ldap2.example.org\']"\n        KEEP_EXISTING_CONFIG: "false"\n        LDAP_REMOVE_CONFIG_AFTER_SETUP: "true"\n        LDAP_SSL_HELPER_PREFIX: "ldap"\n        tty: true\n        stdin_open: true\n        volumes:\n        - /var/lib/ldap\n        - /etc/ldap/slapd.d\n        - /container/service/slapd/assets/certs/\n        ports:\n        - "389:389"\n        - "636:636"\n    phpldapadmin:\n        image: osixia/phpldapadmin:latest\n        container_name: phpldapadmin\n        environment:\n        PHPLDAPADMIN_LDAP_HOSTS: "openldap"\n        PHPLDAPADMIN_HTTPS: "false"\n        ports:\n        - "8080:80"\n        depends_on:\n        - openldap\n')),(0,a.kt)("p",null,"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35 simple demo 2"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'    version: \'3\'\n    services:\n    openldap:\n        image: osixia/openldap:latest\n        container_name: openldap\n        domainname: "rv.ark"\n        hostname: "openldap"\n        environment:\n        LDAP_DOMAIN: "rv.ark"\n        LDAP_BASE_DN: "dc=rv,dc=ark"\n        LDAP_ADMIN_PASSWORD: "changeme"\n        LDAP_CONFIG_PASSWORD: "changeme"\n        volumes:\n        - /mnt/dpnvme/DMGS-DKP/Auth-openLDAP/ldap.dir:/var/lib/ldap\n        - /mnt/dpnvme/DMGS-DKP/Auth-openLDAP/slapd.dir:/etc/ldap/slapd.d\n        ports:\n        - "389:389"\n        - "636:636"\n\n    phpldapadmin:\n        image: osixia/phpldapadmin:latest\n        container_name: phpldapadmin\n        environment:\n        PHPLDAPADMIN_LDAP_HOSTS: "openldap"\n        PHPLDAPADMIN_HTTPS: "false"\n        ports:\n        - "8080:80"\n        depends_on:\n        - openldap\n')),(0,a.kt)("p",null,"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35 Use demo "),(0,a.kt)("p",null,"\ud83d\udd35 visit & login "),(0,a.kt)("p",null,"  ",(0,a.kt)("a",{parentName:"p",href:"http://172.16.1.144:8080"},"http://172.16.1.144:8080"),"\ndefault cn user is admin.    "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"  cn=admin,dc=rv,dc=ark\n  cn=admin,dc=example,dc=org\n")),(0,a.kt)("p",null,"\ud83d\udd35 design ldap "),(0,a.kt)("p",null,"  domain\ncn:  xxxxx  \u279c admin/manager / root ..   manager  account  (default ??? )\nou:  prod\ncn: xxxx\nou:  test\ncn: yyyy\nou:  IT "),(0,a.kt)("p",null,"  \ud83d\udd36 Design "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"two kinds:  cn & ou. \ncn is user.  ou is group. \n\na lot pc. (department )\n\nrouter. firewall. wifi. \nwin. linux. \ntraefik. hemidall. \n\nlocal vm.  remote vps. \n")),(0,a.kt)("p",null,"\ud83d\udd35 creatr user demo "),(0,a.kt)("p",null,"  \ud83d\udd36 create group. "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"\u203c\ufe0f if want create user( need gpid ) \nmust create group first. (this will create a gpid)\n>> Generic: Postfix Group \n")),(0,a.kt)("p",null,"  \ud83d\udd36 create user"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Generic: User Account\n")),(0,a.kt)("p",null,"  \ud83d\udd36 add email to user "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"user >>  Add new attribute >> email ...\n")),(0,a.kt)("p",null,"\ud83d\udd35 Create OU "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Generic: Organisational Unit\n")),(0,a.kt)("p",null,"\ud83d\udd35 add device to ldap "),(0,a.kt)("p",null,"\ud83d\udd35 How Join "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"-  join ldap  from client. \n-  add client in server\n\n        two way to add client to domain.\n        usually use client to join server.\n        somethings error.  try add client from server. \n")),(0,a.kt)("p",null,"  \ud83d\udd36 mikrotik "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"ros radius\nno support.openldap.  . \nonly support windows ad (NPS).\n")))}c.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkblog_never_del=self.webpackChunkblog_never_del||[]).push([[356],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>f});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=o.createContext({}),c=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=c(e.components);return o.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},d=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),d=c(t),f=r,k=d["".concat(s,".").concat(f)]||d[f]||u[f]||i;return t?o.createElement(k,l(l({ref:n},p),{},{components:t})):o.createElement(k,l({ref:n},p))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=d;var a={};for(var s in n)hasOwnProperty.call(n,s)&&(a[s]=n[s]);a.originalType=e,a.mdxType="string"==typeof e?e:r,l[1]=a;for(var c=2;c<i;c++)l[c]=t[c];return o.createElement.apply(null,l)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"},6806:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var o=t(7462),r=(t(7294),t(3905));const i={sidebar_position:1701,title:"\ud83c\udfaa-7\ufe0f\u20e3 NET \ud83c\udf10-0\ufe0f\u20e3 SSL \u279c Apply & Use"},l="SSL \u2736 Apply & Use",a={unversionedId:"\ud83c\udfaa-7\ufe0f\u20e3 NET \ud83c\udf10-0\ufe0f\u20e3 SSL \u279c Apply",id:"\ud83c\udfaa-7\ufe0f\u20e3 NET \ud83c\udf10-0\ufe0f\u20e3 SSL \u279c Apply",title:"\ud83c\udfaa-7\ufe0f\u20e3 NET \ud83c\udf10-0\ufe0f\u20e3 SSL \u279c Apply & Use",description:"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35 SSL  Desc",source:"@site/docs/\ud83c\udfaa-7\ufe0f\u20e3 NET \ud83c\udf10-0\ufe0f\u20e3 SSL \u279c Apply.md",sourceDirName:".",slug:"/\ud83c\udfaa-7\ufe0f\u20e3 NET \ud83c\udf10-0\ufe0f\u20e3 SSL \u279c Apply",permalink:"/\ud83c\udfaa-7\ufe0f\u20e3 NET \ud83c\udf10-0\ufe0f\u20e3 SSL \u279c Apply",draft:!1,tags:[],version:"current",sidebarPosition:1701,frontMatter:{sidebar_position:1701,title:"\ud83c\udfaa-7\ufe0f\u20e3 NET \ud83c\udf10-0\ufe0f\u20e3 SSL \u279c Apply & Use"},sidebar:"defaultSidebar",previous:{title:"\ud83c\udfaa-5\ufe0f\u20e3 SYS \ud83d\udcfa\ud83d\udcfa Ubuntu init",permalink:"/\ud83c\udfaa-5\ufe0f\u20e3 SYS \ud83d\udcfa\ud83d\udcfa Ubuntu init"},next:{title:"\ud83c\udfaa-7\ufe0f\u20e3 NET \ud83c\udf10-3\ufe0f\u20e3 DNS \u279c AdGuard",permalink:"/\ud83c\udfaa-7\ufe0f\u20e3 NET \ud83c\udf10-3\ufe0f\u20e3 DNS \u279c AdGuard"}},s={},c=[],p={toc:c};function u(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,o.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"ssl--apply--use"},"SSL \u2736 Apply & Use"),(0,r.kt)("p",null,"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35 SSL  Desc "),(0,r.kt)("p",null,"\ud83d\udd35 http vs https"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"http:   no encryped         \u279c  everyone know what you send to website\nhttps:  encryped with ssl   \u279c  no one know what you send to website \n\n    if need use https. must have ssl first. \n")),(0,r.kt)("p",null,"\ud83d\udd35 SSL Desc "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Client: chrome/firefox \n    >> Server: nginx/apache  <<=======>>  CA Center: WanCA/LanCA\n\nssl can help you encrypted data. \nbut most import part is ssl help you verify server is true/fake \n\nbecause a lot hack in internet.\neven you set https. it is still can be hacked.\nif you visit a https web. the lock/https color in chrome url is green. that website is ok \nif you visit a https web. the lock/https color in chrome url is red.   that website no ok\n")),(0,r.kt)("p",null,"\ud83d\udd35 WAN-CA Desc "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"how sll can verify a web is real(green) or fake(red)\nssl need use CA to make decide.\n\nCA is theone who general SSL. \n\n    everyone can build CA!  it is just a file\n        you can build ca for your homelab.\n    \n    when it come to internet. \n        some big company begian offer CA service to public.\n        and chrome/firefox have set those company`s ca`s info to browser by default.\n\n        so if website use those ca to generate ssl.\n            when you visit their website. \n                the https lock color will be green.\n\n\nwan-ca generate two file for website\n    fullchain.pem  \n    privatekey.pem\n\nwebsite set that two file to nginx/apache\n    ca can verity if the website`s pem is the right one.\n        if right > client chrome https lock be green.\n        if wrong > client chrome https lock be red.\n")),(0,r.kt)("p",null,"\ud83d\udd35 WAN-SSL Workflow"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"\ud83d\udd36 visit a https website:   https://vps.0214.icu\n    check ca in chrome url\n        *.0214.icu \n            issued by: R3  (big company)\n                in it have public key\n\n\n\n\nwebsite use big company`s ca to generate ssl:  public + private key\nwebsite config public+private key to nginx \nclient use chrome to visit nginx \n    nginx send back some info.\n    chrome use info to verify it nginx is fake or true.\n")),(0,r.kt)("p",null,"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35 Lan-SSL Demo ESXI & Desc\n\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35 Lan-SSL Demo ESXI & Desc\n\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35 Lan-SSL Demo ESXI & Desc"),(0,r.kt)("p",null,"\ud83d\udd35 Why need Local SSL  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"esxi need https. or chrome deny it. \na lot more need ssl too.\n")),(0,r.kt)("p",null,"\ud83d\udd35 SSL tooles "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"openssl / mkcert  a lot tool can general local ssl for you.\nmkcert is easiest.\n")),(0,r.kt)("p",null,"\ud83d\udd35 MacOS install mkcert "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"brew install mkcert\nbrew install nss # if you use Firefox\n\n\ud83d\udd36 Offical Manual \n    https://github.com/FiloSottile/mkcert\n")),(0,r.kt)("p",null,"\ud83d\udd35 Create & install CA "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"iMAC Desktop mkcert -install\nThe local CA is already installed in the system trust store! \ud83d\udc4d\nThe local CA is now installed in the Firefox trust store (requires browser restart)! \ud83e\udd8a\n\n    \u203c\ufe0f mkcert auto help you install lan-ca to macos & firefox. \u203c\ufe0f\n    \u203c\ufe0f mkcert auto help you install lan-ca to macos & firefox. \u203c\ufe0f\n    \u203c\ufe0f mkcert auto help you install lan-ca to macos & firefox. \u203c\ufe0f\n\n\n\ud83d\udd36 MacOS Check installed LAN-CA:  \n\n    mac \n        >> keychain \n            >> system \n                >> mkcert techark@TechArks-iMac.local (TechArk)\n    \n\n\n\ud83d\udd36 Chrome  \n\n    use system `s ca. \n        so if lan-ca install to macos.  chrome can use too. \n\n\n\ud83d\udd36 Firefox \n\n    not use system`s ca.\n        this is why if firefox need install nss\n")),(0,r.kt)("p",null,"\ud83d\udd35 Local Domain prepair"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"before use https.  \nyou need config http first.  not visit esxi via ip! \nin local router/dsn server. set static dns\n\n\n\ud83d\udd36 set Aname \n\n    g3.esxi.rv >> 10.219.219.13\n    g5.exxi.rv >> 10.219.219.15\n\n\ud83d\udd36 ping check \n\n    iMAC Desktop ping g3.esxi.rv\n\n\ud83d\udd36 url check\n\n    http://g3.esxi.rv/\n")),(0,r.kt)("p",null,"\ud83d\udd35 Create SSL for *.esxi "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'mkcert "*.esxi.rv"\n\n\nCreated a new certificate valid for the following names \ud83d\udcdc\n- "*.esxi"\nWarning: many browsers don\'t support second-level wildcards like "*.esxi" \u26a0\ufe0f\nReminder: X.509 wildcards only go one level deep, so this won\'t match a.b.esxi \u2139\ufe0f\nThe certificate is at "./_wildcard.esxi.pem" and the key at "./_wildcard.esxi-key.pem" \u2705\nIt will expire on 20 September 2024 \ud83d\uddd3\n')),(0,r.kt)("p",null,"\ud83d\udd35 ESXI Config SSL"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"\ud83d\udd36 delete default ssl file \n\n    rm -f /etc/vmware/ssl/rui.crt\n    rm -f /etc/vmware/ssl/rui.key\n\n\ud83d\udd36 upload & rename\n\n    cd /etc/vmware/ssl\n\n    _wildcard.esxi.pem       \u279c rename to rui.crt \n    _wildcard.esxi-key.pem   \u279c rename to rui.key\n\n\ud83d\udd36 reboot esxi \n\n\ud83d\udd36 test:    https://g3.esxi.rv\n")),(0,r.kt)("p",null,"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35 Lan-SSL \u25aa Fortigate GUI \u2705\n\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35 Lan-SSL \u25aa Fortigate GUI \u2705\n\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35 Lan-SSL \u25aa Fortigate GUI \u2705"),(0,r.kt)("p",null,"\ud83d\udd35 desc "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"use https to login frotigate gui web.\n")),(0,r.kt)("p",null,"\ud83d\udd35 How "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"fotigate >> system >> setting >> https server certicate \n    >> create \n        >> we use mkcert generate ssl.  so choose import \n            >> type:  certificate\n                cert file:  choose  xx.pem\n                key file :  choose  xx-key.pem \n                    >> create \n\nfotigate >> system >> setting >> https server certicate \n    >> choose new created. \n        >> apply \n\n\nset dns record:   fg.rv.ark >> 10.219.219.1\n\nhttps visit:      https://fg.rv.ark\n")),(0,r.kt)("p",null,"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35 HomeLAB \u2736 SSL.Demo \u279c Nginx-Docker \ud83d\udcaf"),(0,r.kt)("p",null,"\ud83d\udd36 Simplest Demo"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"docker run -d -p 80:80 --rm --name nginx nginx\nweb visit http://ip  \n\nif we need really use it. \nwe need setup more,\n")),(0,r.kt)("p",null,"\ud83d\udd36 DNS Config"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"one host/vps can run alot web.\nevery web can have a domain.\n\n    vps.0214.icu     to vps ip \n    nginx.0214.icu   to vps ip \n")),(0,r.kt)("p",null,"\ud83d\udd36 mkdir folder"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"mkdir -p /root/DockerConfNoDEL/Nginx/log\nmkdir -p /root/DockerConfNoDEL/Nginx/conf\nmkdir -p /root/DockerConfNoDEL/Nginx/conf.d\nmkdir -p /root/DockerConfNoDEL/Nginx/static\nmkdir -p /root/DockerConfNoDEL/Nginx/ssl\n")),(0,r.kt)("p",null,"\ud83d\udd35 Copy Default files "),(0,r.kt)("p",null,"\ud83d\udd36 Copy nginx.conf"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"we not create new config.  \nwe often copy a conf. and change some in it.\n\ndocker cp nginx:/etc/nginx/nginx.conf /root/DockerConfNoDEL/Nginx/conf/nginx.conf\n            |--\x3e this is docker nage.  we run a nginx first. then copy config from it. \n")),(0,r.kt)("p",null,"\ud83d\udd36 Check nginx.conf"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"\u203c\ufe0f every docker have differnet config.  better check it \u203c\ufe0f\n\ncat /root/DockerConfNoDEL/Nginx/conf/nginx.conf\n    ....\n    include /etc/nginx/conf.d/*.conf;\n    ....\n\nwe found default.conf  include another folder:  conf.d/*.conf;\n    because one nginx can run a lot web like website.\n            1.0214.icu / 2.0214.icu / 3.0214.icu\n        you can give every url a  different conf.\n            and put then under  conf.d/*.conf;\n\nwe enter docker found there is a file in conf.d too.\n    so we need copy it out to host folder too.\n        root@e32f3bb799fe:/etc/nginx/conf.d# ls\n        default.conf\n        root@e32f3bb799fe:/etc/nginx/conf.d# \n")),(0,r.kt)("p",null,"\ud83d\udd36 Copy default.conf from conf.d"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"docker cp nginx:/etc/nginx/conf.d/default.conf /root/DockerConfNoDEL/Nginx/conf.d/default.conf\n")),(0,r.kt)("p",null,"\ud83d\udd36 Copy index.html "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"docker cp nginx:/usr/share/nginx/html/index.html /root/DockerConfNoDEL/Nginx/static/index.html\n")),(0,r.kt)("p",null,"\ud83d\udd36 out folder demo "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"VPS Nginx tree\n.\n\u251c\u2500\u2500 conf\n\u2502\xa0\xa0 \u2514\u2500\u2500 nginx.conf\n\u251c\u2500\u2500 conf.d\n\u2502\xa0\xa0 \u2514\u2500\u2500 default.conf\n\u251c\u2500\u2500 log\n\u251c\u2500\u2500 ssl\n\u2514\u2500\u2500 static\n    \u2514\u2500\u2500 index.html\n")),(0,r.kt)("p",null,"\ud83d\udd35 Run nginx "),(0,r.kt)("p",null,"\ud83d\udd36 check host file"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"docker`s name can not same.\nso we stop & delete old nginx. \nstart a new one & mount folder/file to nginx.\n\u203c\ufe0f some are file some are folder \u203c\ufe0f\n\nVPS Nginx pwd\n/root/DockerConfNoDEL/Nginx\nVPS Nginx tree\n.\n\u251c\u2500\u2500 conf\n\u2502\xa0\xa0 \u2514\u2500\u2500 nginx.conf\n\u251c\u2500\u2500 conf.d\n\u2502\xa0\xa0 \u2514\u2500\u2500 default.conf\n\u251c\u2500\u2500 log\n\u251c\u2500\u2500 ssl\n\u2514\u2500\u2500 static\n    \u2514\u2500\u2500 index.html\n\n5 directories, 3 files\n")),(0,r.kt)("p",null,"\ud83d\udd36 run "),(0,r.kt)("p",null,"docker run -p 443:443 -p 80:80 --name nginx \\\n-v /root/DockerConfNoDEL/Nginx/static:/usr/share/nginx/html  \\\n-v /root/DockerConfNoDEL/Nginx/conf/nginx.conf:/etc/nginx/nginx.conf \\\n-v /root/DockerConfNoDEL/Nginx/log:/var/log/nginx  \\\n-v /root/DockerConfNoDEL/Nginx/conf.d:/etc/nginx/conf.d \\\n-v /root/DockerConfNoDEL/Nginx/ssl:/ssl \\\n-d nginx"),(0,r.kt)("p",null,"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35 SSL APPLY "),(0,r.kt)("p",null,"\ud83d\udd35 WHY"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"now we copy all needed file from docker to local.\nwhen create new nginx docker.  just need mount local folder to nginx docker.\nif you delete nginx docker. the data is still on local.\n\nnext is config nginx SSL.\nnginx default suppprt http.\nfor real use at least config https and setup ssl.\nlet`s apply ssl first. then setup ssl to nginx.\n")),(0,r.kt)("p",null,"\ud83d\udd35 SSL Verify "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"https://eff-certbot.readthedocs.io/en/stable/using.html#manual\n\n\nif you wnt appley 0214.icu a ssl.\nyou must prove 0214.icu is your!!!! \n\nyou have two option to prove you can control the domain:  \n    http challge: ask you put some file to your web server\n    dns challge : need you login domain.and put some txt nds record to dmain.\n")),(0,r.kt)("p",null,"\ud83d\udd36 DNS "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"vps.0214.icu >> 172.93.42.232\n")),(0,r.kt)("p",null,"\ud83d\udd36 Apply tool"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"apply ssl need install a tool: certbot\n\n    if you use nginx  or apache ....   they make apply much easy.\n        sudo certbot --nginx\n        sudo certbot --apache\n\nwe install nginx in docker... \n    so we apply ssl manyal! \n    https://certbot.eff.org/instructions?ws=other&os=ubuntufocal\n")),(0,r.kt)("p",null,"\ud83d\udd36 Instal certbot (ubuntu 20)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"sudo snap install core; sudo snap refresh core\nsudo snap install --classic certbot\nsudo ln -s /snap/bin/certbot /usr/bin/certbot\nsudo snap set certbot trust-plugin-with-root=ok\n")),(0,r.kt)("p",null,"\ud83d\udd35 SSL Apply: manual & dns-challenge"),(0,r.kt)("p",null,"\ud83d\udd36 apply "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'certbot certonly  -d "*.0214.icu" --manual --preferred-challenges dns --server https://acme-v02.api.letsencrypt.org/directory \n\n...\nPlease deploy a DNS TXT record under the name:\n_acme-challenge.0214.icu.\nwith the following value:\nI-sb3kevItDpJOUgoLRBQiJtErDDb1bZoqLqLHfsRrw\n...\n\n\ncertbot certonly  -d "*.0214.icu" --rsa-key-size 4096 --manual --preferred-challenges dns --server https://acme-v02.api.letsencrypt.org/directory \n')),(0,r.kt)("p",null,"e. g. certbot --rsa-key-size 4096 -(other-arguments)`"),(0,r.kt)("p",null,"\ud83d\udd36 verify domain "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"login web where you buy domain.\nadd above record and come back to apply \n\n    cloudflare >> dns >> add record\n\n        type:     txt \n        name:     _acme-challenge.0214.icu.\n        content:  I-sb3kevItDpJOUgoLRBQiJtErDDb1bZoqLqLHfsRrw\n")),(0,r.kt)("p",null,"\ud83d\udd36 contine apply "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Successfully received certificate.\nCertificate is saved at: /etc/letsencrypt/live/0214.icu/fullchain.pem\nKey is saved at:         /etc/letsencrypt/live/0214.icu/privkey.pem\nThis certificate expires on 2022-09-19.\nThese files will be updated when the certificate renews.\n\nNEXT STEPS:\n- This certificate will not be renewed automatically. Autorenewal of --manual certificates requires the use of an authentication hook script (--manual-auth-hook) but one was not provided. To renew this certificate, repeat this same certbot command before the certificate's expiry date.\n")),(0,r.kt)("p",null,"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35 Nginx Config SSL "),(0,r.kt)("p",null,"\ud83d\udd35 Copy SSL "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"cp /etc/letsencrypt/live/0214.icu/fullchain.pem /root/DockerConfNoDEL/Nginx/ssl\ncp /etc/letsencrypt/live/0214.icu/privkey.pem /root/DockerConfNoDEL/Nginx/ssl\n\n\n-v /root/DockerConfNoDEL/Nginx/ssl:/ssl \\\n")),(0,r.kt)("p",null,"\ud83d\udd35 edit conf.d/default.conf"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'\u203c\ufe0f not conf/nginx.conf  leave that no change.   \u203c\ufe0f  \n\n\ncat <<EOF >> /root/DockerConfNoDEL/Nginx/conf.d/default.conf\nserver {\n  listen 80;\n  server_name vps.0214.icu 0214.icu;\n\n  # Redirect all traffic to SSL\n  rewrite ^ https://$server_name$request_uri? permanent;\n}\n\nserver {\n  listen 443 ssl default_server;\n\n# \u203c\ufe0f must 1.2+  or firefox no support.\n  ssl_protocols TLSv1.2 TLSv1.3; \n\n  # disables all weak ciphers\n  ssl_ciphers ALL:!aNULL:!ADH:!eNULL:!LOW:!EXP:RC4+RSA:+HIGH:+MEDIUM;\n\n  server_name vps.0214.icu 0214.icu;\n\n  ## Access and error logs.\n  access_log /var/log/nginx/access.log;\n  error_log  /var/log/nginx/error.log info;\n\n  ## Keep alive timeout set to a greater value for SSL/TLS.\n  keepalive_timeout 75 75;\n\n  ## See the keepalive_timeout directive in nginx.conf.\n  ## Server certificate and key.\n  ssl_certificate /ssl/fullchain.pem;\n  ssl_certificate_key /ssl/privkey.pem;\n  ssl_session_timeout  5m;\n\n  ## Strict Transport Security header for enhanced security. See\n  ## http://www.chromium.org/sts. I\'ve set it to 2 hours; set it to\n  ## whichever age you want.\n  add_header Strict-Transport-Security "max-age=7200";\n  \n  root /usr/share/nginx/html;\n  index index.html;\n}\nEOF\n')))}u.isMDXComponent=!0}}]);
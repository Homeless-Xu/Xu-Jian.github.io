"use strict";(self.webpackChunkblog_never_del=self.webpackChunkblog_never_del||[]).push([[9867],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>d});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=r.createContext({}),p=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(i.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},k=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),k=p(t),d=a,m=k["".concat(i,".").concat(d)]||k[d]||u[d]||o;return t?r.createElement(m,l(l({ref:n},c),{},{components:t})):r.createElement(m,l({ref:n},c))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=k;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s.mdxType="string"==typeof e?e:a,l[1]=s;for(var p=2;p<o;p++)l[p]=t[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}k.displayName="MDXCreateElement"},6691:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var r=t(7462),a=(t(7294),t(3905));const o={sidebar_position:1719,title:"\ud83c\udfaa-7\ufe0f\u20e3 NET \ud83c\udf10-7\ufe0f\u20e3 VPN \u279c\u279c\u279c Netmaker"},l="VPN \u2736 Netmaker",s={unversionedId:"\ud83c\udfaa-7\ufe0f\u20e3 NET \ud83c\udf10-7\ufe0f\u20e3 VPN \u279c\u279c\u279c Netmaker",id:"\ud83c\udfaa-7\ufe0f\u20e3 NET \ud83c\udf10-7\ufe0f\u20e3 VPN \u279c\u279c\u279c Netmaker",title:"\ud83c\udfaa-7\ufe0f\u20e3 NET \ud83c\udf10-7\ufe0f\u20e3 VPN \u279c\u279c\u279c Netmaker",description:"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35  Netmaker  demo",source:"@site/docs/\ud83c\udfaa-7\ufe0f\u20e3 NET \ud83c\udf10-7\ufe0f\u20e3 VPN \u279c\u279c\u279c Netmaker.md",sourceDirName:".",slug:"/\ud83c\udfaa-7\ufe0f\u20e3 NET \ud83c\udf10-7\ufe0f\u20e3 VPN \u279c\u279c\u279c Netmaker",permalink:"/\ud83c\udfaa-7\ufe0f\u20e3 NET \ud83c\udf10-7\ufe0f\u20e3 VPN \u279c\u279c\u279c Netmaker",draft:!1,tags:[],version:"current",sidebarPosition:1719,frontMatter:{sidebar_position:1719,title:"\ud83c\udfaa-7\ufe0f\u20e3 NET \ud83c\udf10-7\ufe0f\u20e3 VPN \u279c\u279c\u279c Netmaker"},sidebar:"defaultSidebar",previous:{title:"\ud83c\udfaa-7\ufe0f\u20e3 NET \ud83c\udf10-7\ufe0f\u20e3 VPN \u279c\u279c Wireguard",permalink:"/\ud83c\udfaa-7\ufe0f\u20e3 NET \ud83c\udf10-7\ufe0f\u20e3 VPN \u279c\u279c Wireguard"},next:{title:"\ud83c\udfaa-7\ufe0f\u20e3 NET \ud83c\udf10\ud83c\udf10-0\ufe0f\u20e3 Proxy \u279c Teaefik",permalink:"/\ud83c\udfaa-7\ufe0f\u20e3 NET \ud83c\udf10\ud83c\udf10-0\ufe0f\u20e3 Proxy \u279c Teaefik"}},i={},p=[],c={toc:p};function u(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"vpn--netmaker"},"VPN \u2736 Netmaker"),(0,a.kt)("p",null,"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35  Netmaker  demo"),(0,a.kt)("p",null,"\ud83d\udd35 netmaker Server require "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Ubuntu 20.  best .\npublic ip. \ndomain.\n")),(0,a.kt)("p",null,"\ud83d\udd35 Domain prepair "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"\ud83d\udd36 Set A record for:  dashboard & api & broker \n\n        dashboard.0214.icu \n        api.0214.icu     \n        broker.0214.icu  \n\n            no change name. must use  dashboard/api/broker + domain.\n\n\n\ud83d\udd36 Check DNS \n\n    VPS ~ nslookup dashboard.0214.icu 8.8.8.8 \n    Server:         8.8.8.8\n    Address:        8.8.8.8#53\n\n    Non-authoritative answer:\n    Name:   dashboard.0214.icu\n    Address: 172.93.42.232\n")),(0,a.kt)("p",null,"\ud83d\udd35 SRV  Install Depndenices"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo apt-get install -y docker.io docker-compose wireguard\n    \n    \ud83d\udd36 option\n        sudo apt install containerd\n            systemctl start docker\n            systemctl enable docker\n")),(0,a.kt)("p",null,"\ud83d\udd35 check port & firewall "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"make sure 443 not used\n\nsudo ufw allow proto tcp from any to any port 443 && sudo ufw allow 51821:51830/udp\niptables --policy FORWARD ACCEPT\n")),(0,a.kt)("p",null,"\ud83d\udd35 config docker-compose file "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"wget -O docker-compose.yml https://raw.githubusercontent.com/gravitl/netmaker/master/compose/docker-compose.traefik.yml\nsed -i 's/NETMAKER_BASE_DOMAIN/<your base domain>/g' docker-compose.yml\nsed -i 's/SERVER_PUBLIC_IP/<your server ip>/g' docker-compose.yml\nsed -i 's/YOUR_EMAIL/<your email>/g' docker-compose.yml\n\n\nsed -i 's/NETMAKER_BASE_DOMAIN/0214.icu/g' docker-compose.yml\nsed -i 's/SERVER_PUBLIC_IP/172.93.42.232/g' docker-compose.yml\nsed -i 's/YOUR_EMAIL/xx2610@gmail.com/g' docker-compose.yml\n\n\n \ud83d\udd36 get NETMAKER_BASE_DOMAIN\n        \n        in compose file \n        BACKEND_URL: \"https://api.NETMAKER_BASE_DOMAIN\"\n            so NETMAKER_BASE_DOMAIN should be your domain.  no head.\n                0214.icu\n\n    \ud83d\udd36 get public ip\n\n        ip route get 1 | sed -n 's/^.*src \\([0-9.]*\\) .*$/\\1/p'\n")),(0,a.kt)("p",null,"\ud83d\udd36 generate key "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"VPS ~ tr -dc A-Za-z0-9 </dev/urandom | head -c 30 ; echo ''\nXJy7GUhBQwJNVphiVl2gqiGio3x3f4\n\nsed -i 's/REPLACE_MASTER_KEY/KcZNVf46rEJvqecy1Vqpb5BZFaUlxU/g' docker-compose.yml\n")),(0,a.kt)("p",null,"\ud83d\udd36 Prepare MQ"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"No need any config. jsut run \n\nwget -O /root/mosquitto.conf https://raw.githubusercontent.com/gravitl/netmaker/master/docker/mosquitto.conf\n")),(0,a.kt)("p",null,"\ud83d\udd36 start netmaker "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo docker-compose up -d\n\n\u25ce check log:          docker logs netmaker\n")),(0,a.kt)("p",null,"\ud83d\udd36 login "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"https://dashboard.0214.icu/login\n")),(0,a.kt)("p",null,"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35 USE Netmaker "),(0,a.kt)("p",null,"\ud83d\udd35 Srv:   Create network "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"ip:  10.214.214.0/24 \n    is local network  \u279c no .  (for big company. use lan only.)\n    udp hole punching \u279c if allow wireguard use udp vpn.\n")),(0,a.kt)("p",null,"\ud83d\udd35 Client:  install netclient "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"\u203c\ufe0f offical Manyal   https://docs.netmaker.org/netclient.html  \u203c\ufe0f\n\u203c\ufe0f offical Manyal   https://docs.netmaker.org/netclient.html  \u203c\ufe0f\n\u203c\ufe0f offical Manyal   https://docs.netmaker.org/netclient.html  \u203c\ufe0f\n\n\n\ud83d\udd36 Node - Ubuntu \n\n    curl -sL 'https://apt.netmaker.org/gpg.key' | sudo tee /etc/apt/trusted.gpg.d/netclient.asc\n    curl -sL 'https://apt.netmaker.org/debian.deb.txt' | sudo tee /etc/apt/sources.list.d/netclient.list\n    sudo apt update\n    sudo apt install netclient -y\n\n\n\n\ud83d\udd36 Node - mac \n\n    brew install netclient\n")),(0,a.kt)("p",null,"\ud83d\udd35 Srv:  get token & set client nodes."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"server will general client cmd for you .\njust copy and past to client node.\n(client need install netclient first)\n\n\ndocker run -d --network host  --privileged -e TOKEN=eyJhcGljb25uc3RyaW5nIjoiYXBpLjAyMTQuaWN1OjQ0MyIsIm5ldHdvcmsiOiIwMjE0Iiwia2V5IjoiNDUwY2Q2MjQzMmVlNzllOSIsImxvY2FscmFuZ2UiOiIifQ== -v /etc/netclient:/etc/netclient --name netclient gravitl/netclient:v0.14.3\n\n\u203c\ufe0f if errot           sudo service docker restart \u203c\ufe0f\n")),(0,a.kt)("p",null,"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35 Traefik add router  \u2705"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"vps-docker-netmaker:  can ping vpn(10.214.214.0/24) & lan inside homelab(172.16.1.0/24)\nvps-docker-traefik:   No  ping vpn(10.214.214.0/24) & lan inside homelab(172.16.1.0/24)\n\n    but vps-docker-traefik  can connect vps-docker-netmaker. (use same docker`s network )\n        add staric route to vps-docker-traefik. so vps-docker-traefik can visit vpn & lan in homelab.\n            route add -net 10.214.214.0 netmask 255.255.255.0 gw netmaker\n            route add -net 172.16.1.0 netmask 255.255.255.0 gw netmaker\n            route add -net 10.1.1.0 netmask 255.255.255.0 gw netmaker\n                \u25ce netmaker is netmaker`s container name.\n                \u25ce cotainer in same docekr netwrok. can ping each other use contain name.\n")),(0,a.kt)("p",null,"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\n\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\n\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35   vps host network config "),(0,a.kt)("p",null,"\ud83d\udd35 goal "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"if use docker to build netmaker in vps. \nvps it self can not visit valn in homelab. or vpn network.\n\nto fix this.\n    netmaker use vps`s eth0 by default. \n    add another ip to vps`s eth0 card.\n\n    then set vps. as egress node. \n    let vlan in homelab visit new ip in host. \n\n        \u203c\ufe0f no create new virtual nic in vps. no work. tried \u203c\ufe0f\n            netmaker only use one nic. \n                you can enter netmaker docker. \n                    use route to check which nic it use. \n")),(0,a.kt)("p",null,"\ud83d\udd35 add another ip to nic "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"vi /etc/network/interfaces\n\niface eth0 inet static\naddress 172.16.254.254/32\n\nsudo systemctl restart networking\n")),(0,a.kt)("p",null,"\ud83d\udd35 cofig netmaker "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"set vps . host as  exgress gateway. \n\negress gateway range:  172.16.254.254/32\negress nic :     eth0\n")),(0,a.kt)("p",null,"\ud83d\udd35 ether vps docker.netmaker "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"bash-5.1# route\nKernel IP routing table\nDestination     Gateway         Genmask         Flags Metric Ref    Use Iface\ndefault         vps.local       0.0.0.0         UG    0      0        0 eth0\n10.1.1.0        *               255.255.255.0   U     0      0        0 nm-0214\n10.214.214.0    *               255.255.255.0   U     0      0        0 nm-0214\n172.16.1.0      *               255.255.255.0   U     0      0        0 nm-0214\n172.16.254.254  *               255.255.255.255 UH    0      0        0 nm-0214\n172.19.0.0      *               255.255.0.0     U     0      0        0 eth0\n\n\u203c\ufe0f fuck no work. .. ..\n\nadd static router to docker.netmaker.  fuck ..\n\n\n\n        route add -net 10.214.214.0 netmask 255.255.255.0 gw netmaker\n            route add -net 172.16.1.0 netmask 255.255.255.0 gw netmaker\n\nroute add -net 172.16.254.254 netmask 255.255.255.255 gw netmaker\nroute add -net 172.16.254.254 netmask 255.255.255.255 device \n\n/sbin/route add -net <IP>/<MASK> <GW> dev <ethX>\n\n\n\nThe configuration file for this is /etc/network/routes\n")),(0,a.kt)("p",null,".. "),(0,a.kt)("p",null,"create network for docekr.\negress this network ????"),(0,a.kt)("p",null,"..\n\u81ea\u5df1\u521b\u5efa overlay \u7f51\u7edc .\n\u4e0d\u7528swarm \u4e5f\u80fd\u7528 \u554a.  fuck.  \u9664\u4e86 nsx \u8fd8\u6709\u5565overlay ???"),(0,a.kt)("p",null,"overlay \u4e3b\u673a.  \u5fc5\u987b\u989d\u5916\u4e00\u4e2a\u7f51\u5361\u554a?"),(0,a.kt)("p",null,"use k8s  -.-"),(0,a.kt)("p",null,"how add vps to k8s."),(0,a.kt)("p",null,"vps. run cmd.  use vlan...  doen ????"),(0,a.kt)("p",null,"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35 "),(0,a.kt)("p",null,"\ud83d\udd35 "),(0,a.kt)("p",null,"\ud83d\udd35  test on other vpn node. "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"1 packets transmitted, 1 packets received, 0% packet loss\nround-trip min/avg/max = 1.191/1.191/1.191 ms\nbash-5.1# ip a\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n    valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host \n    valid_lft forever preferred_lft forever\n3: nm-0214: <POINTOPOINT,NOARP,UP,LOWER_UP> mtu 1280 qdisc noqueue state UNKNOWN group default qlen 1000\n    link/none \n    inet 10.214.214.254/24 scope global nm-0214\n    valid_lft forever preferred_lft forever\n    inet 10.214.214.254/32 scope global nm-0214\n    valid_lft forever preferred_lft forever\n26: eth0@if27: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default \n    link/ether 02:42:ac:13:00:05 brd ff:ff:ff:ff:ff:ff link-netnsid 0\n    inet 172.19.0.5/16 brd 172.19.255.255 scope global eth0\n    valid_lft forever preferred_lft forever\n    inet6 fe80::42:acff:fe13:5/64 scope link \n    valid_lft forever preferred_lft forever\n\n\n\n\nbash-5.1# route\nKernel IP routing table\nDestination     Gateway         Genmask         Flags Metric Ref    Use Iface\ndefault         vps.local       0.0.0.0         UG    0      0        0 eth0\n10.1.1.0        *               255.255.255.0   U     0      0        0 nm-0214\n10.214.214.0    *               255.255.255.0   U     0      0        0 nm-0214\n172.16.1.0      *               255.255.255.0   U     0      0        0 nm-0214\n172.16.254.254  *               255.255.255.255 UH    0      0        0 nm-0214\n172.19.0.0      *               255.255.0.0     U     0      0        0 eth0\n")),(0,a.kt)("p",null,"\ud83d\udd35 give  etho another ip!!! "),(0,a.kt)("p",null,"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35  install netmaker in host .\u274c\u274c\u274c\u274c\n\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35  install netmaker in host .\u274c\u274c\u274c\u274c\n\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35  install netmaker in host .\u274c\u274c\u274c\u274c"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"https://netmaker.readthedocs.io/en/master/server-installation.html#nodocker\n")),(0,a.kt)("p",null,"\ud83d\udd35 why no docker "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"docker have lots cons. \ndocker can not allow host itself have vpn! \nso that host can do nothing but run netmaker server.\n\nno docker is the best choose. \nbut.. very difficulty.. fuck.... \n")),(0,a.kt)("p",null,"\ud83d\udd35 dns prepair "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"same as docker install.\n")),(0,a.kt)("p",null,"\ud83d\udd35 install netmaker "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"\ud83d\udd36 get download link .\n\n    go here\n    https://github.com/gravitl/netmaker/releases\n    get latest link.\n    https://github.com/gravitl/netmaker/releases/download/v0.14.4/netmaker\n\n\n\ud83d\udd36 download install sh \n\n    wget https://raw.githubusercontent.com/gravitl/netmaker/master/scripts/netmaker-server.sh\n\n    vi \n\n    change download link to new link \n    wget -O /etc/netmaker/netmaker https://github.com/gravitl/netmaker/releases/download/latest/netmaker\n    wget -O /etc/netmaker/netmaker https://github.com/gravitl/netmaker/releases/download/v0.14.4/netmaker\n\n\n\ud83d\udd36 install \n")),(0,a.kt)("p",null,"\ud83d\udd35 change masterkey  "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'\ud83d\udd36 generate key \n\n    tr -dc A-Za-z0-9 </dev/urandom | head -c 30 ; echo \'\'\n    XJy7GUhBQwJNVphiVl2gqiGio3x3f4\n\n        just a random key. any machine can do.\n\n\n\ud83d\udd36 config \n\n    cd /etc/netmaker/config/environments/\n    masterkey: "secretkey"  \u279c  masterkey: "xxxxxx"\n\n\n\ud83d\udd36 restart \n\n    sudo systemctl restart netmaker\n\n\ud83d\udd36 check status \n    sudo journalctl -u netmaker\n\nnow. netmaker server is done.\nnext is config dashboard/ui for it.\n')),(0,a.kt)("p",null,"\ud83d\udd35 netmaker-ui "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"install nginx \nput netmaker-ui file into nginx.\nconfig nginx \n\nuse proxy like traefik to visit netmaker-ui from internet\n")),(0,a.kt)("p",null,"\ud83d\udd36 install nginx  "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"apt install nginx\napt install unzip \n")),(0,a.kt)("p",null,"\ud83d\udd36 move default nginx config ???"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo cp /usr/share/nginx/html/nginx.conf /etc/nginx/conf.d/default.conf\n")),(0,a.kt)("p",null,"\ud83d\udd36 get netmaker-ui download link "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"https://github.com/gravitl/netmaker-ui/releases/tag/v0.14.4\nhttps://github.com/gravitl/netmaker-ui/releases/download/v0.14.4/Netmaker-Ui-v0.14.4.zip\n")),(0,a.kt)("p",null,"\ud83d\udd36 change new link "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo wget -O /usr/share/nginx/html/netmaker-ui.zip https://github.com/gravitl/netmaker-ui/releases/download/v0.14.4/Netmaker-Ui-v0.14.4.zip\n")),(0,a.kt)("p",null,"\ud83d\udd36 unzip "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo unzip /usr/share/nginx/html/netmaker-ui.zip -d /usr/share/nginx/html\n")),(0,a.kt)("p",null,"\ud83d\udd36 jsut run "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo sed -i 's/root \\/var\\/www\\/html/root \\/usr\\/share\\/nginx\\/html/g' /etc/nginx/sites-available/default\n")),(0,a.kt)("p",null,"\ud83d\udd35 create config.js "),(0,a.kt)("p",null,"\ud83d\udd36 download config generate js "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"cd /usr/share/nginx/html\nwget https://raw.githubusercontent.com/gravitl/netmaker-ui/master/generate_config_js.sh\nchmod 655 generate_config_js.sh\n")),(0,a.kt)("p",null,"\ud83d\udd36 us js create config "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo sh -c 'BACKEND_URL=https://api.0214.icu /usr/share/nginx/html/generate_config_js.sh >/usr/share/nginx/html/config.js'\n\n\u203c\ufe0f change me.  use your own     BACKEND_URL: \"https://api.0214.icu\"\nsudo sh -c 'BACKEND_URL=http://<YOUR BACKEND API URL>:PORT /usr/share/nginx/html/generate_config_js.sh >/usr/share/nginx/html/config.js'\n")),(0,a.kt)("p",null,"\ud83d\udd36 check config. "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"cat config.js \nwindow.REACT_APP_BACKEND='https://api.0214.icu';\n")),(0,a.kt)("p",null,"\ud83d\udd36 restart nginx "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo systemctl start nginx\n")),(0,a.kt)("p",null,"\ud83d\udd35 what this do "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"this do nothing? \nno web available now...\n\n\n-.-  why fuck do it. \ntool should make life easy .\n")))}u.isMDXComponent=!0}}]);
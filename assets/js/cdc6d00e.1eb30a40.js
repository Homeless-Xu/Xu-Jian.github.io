"use strict";(self.webpackChunkblog_never_del=self.webpackChunkblog_never_del||[]).push([[109],{3905:(n,e,t)=>{t.d(e,{Zo:()=>d,kt:()=>h});var a=t(7294);function o(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function r(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function s(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?r(Object(t),!0).forEach((function(e){o(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function i(n,e){if(null==n)return{};var t,a,o=function(n,e){if(null==n)return{};var t,a,o={},r=Object.keys(n);for(a=0;a<r.length;a++)t=r[a],e.indexOf(t)>=0||(o[t]=n[t]);return o}(n,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);for(a=0;a<r.length;a++)t=r[a],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(o[t]=n[t])}return o}var l=a.createContext({}),c=function(n){var e=a.useContext(l),t=e;return n&&(t="function"==typeof n?n(e):s(s({},e),n)),t},d=function(n){var e=c(n.components);return a.createElement(l.Provider,{value:e},n.children)},p={inlineCode:"code",wrapper:function(n){var e=n.children;return a.createElement(a.Fragment,{},e)}},u=a.forwardRef((function(n,e){var t=n.components,o=n.mdxType,r=n.originalType,l=n.parentName,d=i(n,["components","mdxType","originalType","parentName"]),u=c(t),h=o,m=u["".concat(l,".").concat(h)]||u[h]||p[h]||r;return t?a.createElement(m,s(s({ref:e},d),{},{components:t})):a.createElement(m,s({ref:e},d))}));function h(n,e){var t=arguments,o=e&&e.mdxType;if("string"==typeof n||o){var r=t.length,s=new Array(r);s[0]=u;var i={};for(var l in e)hasOwnProperty.call(e,l)&&(i[l]=e[l]);i.originalType=n,i.mdxType="string"==typeof n?n:o,s[1]=i;for(var c=2;c<r;c++)s[c]=t[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},4511:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var a=t(7462),o=(t(7294),t(3905));const r={sidebar_position:1730,title:"\ud83c\udfaa-7\ufe0f\u20e3 NET \ud83c\udf10\ud83c\udf10\ud83c\udf10 VXLAN \u279c NSXT - AIO"},s="vSphere \u2736 NSXT",i={unversionedId:"\ud83c\udfaa-7\ufe0f\u20e3 NET \ud83c\udf10\ud83c\udf10\ud83c\udf10 VXLAN \u279c NSXT - AIO",id:"\ud83c\udfaa-7\ufe0f\u20e3 NET \ud83c\udf10\ud83c\udf10\ud83c\udf10 VXLAN \u279c NSXT - AIO",title:"\ud83c\udfaa-7\ufe0f\u20e3 NET \ud83c\udf10\ud83c\udf10\ud83c\udf10 VXLAN \u279c NSXT - AIO",description:"\ud83d\udd35 best website",source:"@site/docs/\ud83c\udfaa-7\ufe0f\u20e3 NET \ud83c\udf10\ud83c\udf10\ud83c\udf10 VXLAN \u279c NSXT - AIO.md",sourceDirName:".",slug:"/\ud83c\udfaa-7\ufe0f\u20e3 NET \ud83c\udf10\ud83c\udf10\ud83c\udf10 VXLAN \u279c NSXT - AIO",permalink:"/\ud83c\udfaa-7\ufe0f\u20e3 NET \ud83c\udf10\ud83c\udf10\ud83c\udf10 VXLAN \u279c NSXT - AIO",draft:!1,tags:[],version:"current",sidebarPosition:1730,frontMatter:{sidebar_position:1730,title:"\ud83c\udfaa-7\ufe0f\u20e3 NET \ud83c\udf10\ud83c\udf10\ud83c\udf10 VXLAN \u279c NSXT - AIO"},sidebar:"defaultSidebar",previous:{title:"\ud83c\udfaa-7\ufe0f\u20e3 NET \ud83c\udf10\ud83c\udf10-0\ufe0f\u20e3 Proxy \u279c Teaefik",permalink:"/\ud83c\udfaa-7\ufe0f\u20e3 NET \ud83c\udf10\ud83c\udf10-0\ufe0f\u20e3 Proxy \u279c Teaefik"},next:{title:"\ud83c\udfaa-9\ufe0f\u20e3 STO \ud83d\udcc0 NAS \u279c DSM7",permalink:"/\ud83c\udfaa-9\ufe0f\u20e3 STO \ud83d\udcc0 NAS \u279c DSM 7"}},l={},c=[],d={toc:c};function p(n){let{components:e,...t}=n;return(0,o.kt)("wrapper",(0,a.Z)({},d,t,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"vsphere--nsxt"},"vSphere \u2736 NSXT"),(0,o.kt)("p",null,"\ud83d\udd35 best website "),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://vdives.com/"},"https://vdives.com/")),(0,o.kt)("p",null,"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35  Basic info  "),(0,o.kt)("p",null,"\ud83d\udd35 RequireMent       \u2705"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\ud83d\udd36 Minumum Node \n    one physical esxi host is enough.  ram need 32G+ \n    a manager and a edge node T0.  you can run nsxt. \n        \u25aa Physical:  Host    (esxi   )    x 1\n        \u25aa Virtual    Manager (in esxi)    x 1\n        \u25aa Virtual    T0      (in esxi)    x 1  \n\n\n\ud83d\udd36 Physical NIC\n\n    if have vcenter/vds already. no addition physical nic needed.\n    if no vcenter/vds   must have one empty nic. for nsx host node. \n        as for manager/t0/t1 there is nothing about physical nic.\n            they all vm. under esxi. so only use portgroup in esxi.\n\n\n\ud83d\udd36 Physical Network Device  \n\n    must support 1600 mtu setting.\n    \n\n\ud83d\udd36 OVA Files \u203c\ufe0f \n\n    \u25aa nsxt-manager.ova   \u279c For Manager  \n    \u25aa nsxt-edge.ova      \u279c For Edge: T0 & T1.\n        T0 and T1 both use: nsxt-edge.ova!   just have differet config. \n\n    if use vcenter.   only need manager.oav \n    if use esxi.      need both.  \n\n        if have vceter, you can install edge via manager\n        so you only need manager.ova \n        so you no need care their version. they must be same.\n\n        if you use esxi.  you need downlaod both ova yourself. \n        do do make sure use same version.\n            not use 3.1.2. manager . and use 3.0.0 edge.!!!  not work! \n            \u203c\ufe0f Manager.ova and edge.ova   must same version. \u203c\ufe0f\n            \u203c\ufe0f Manager.ova and edge.ova   must same version. \u203c\ufe0f\n            \u203c\ufe0f Manager.ova and edge.ova   must same version. \u203c\ufe0f\n\n\n\n\ud83d\udd36 NSXT-Manager\n\n    NSXT-Manager   one is must.  no need two for study only.\n    only need manager during install and config.\n    after total configed. you can even stop it. \n\n\n\ud83d\udd36 T0/T1 node \n\n    T0 is must.  T1 is option.\n    one T0 is ok. by default it need two.\n\n\n\n\ud83d\udd36 vCenter \n\n    NSX-T  can work with all other planform.  \n    so vCenter is not a must needed.\n    i don`t use it. take too much ram. \n")),(0,o.kt)("p",null,"\ud83d\udd35 License           \u2705"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\ud83d\udd36 VMware NSX-T Data Center 3.1-only  \u2705\n\n    VM based keys.   3.1 ok.  3.2 No\n    GC7N2-2NZDM-H88NY-GWQ7G-YF0E0\n    AA1NK-2LG0L-48DQY-G5XNX-P6KVA\n    CU3M2-8LZ47-485GZ-XQM7G-NY8G2\n\noffical have 60 day free try license.  if you use 3.2+ \n")),(0,o.kt)("p",null,"\ud83d\udd35 MTU Change \u2705"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\ud83d\udd36 MTU Desc \n\n    MTU: ip package size in network.\n    MTU Setting have two level setting:  Software & Hardware.\n        by default. both software(win mac linux) and Hardware (switch router ) is 1500.\n    \n    software mtu like car running in road.\n    hardware mtu like road width of the road.\n        so hardware mtu can bigger than software mtu.\n        but software mtu can`t bigger than hardware mtu.\n\n    defautl mtu work well for most contidion.\n    iscsi work much faster if have large mtu like 9000. but this is an option.\n    as for nsxt. mtu 1600 is a must.\n\n    a lot physical device involved with nsx.\n        physical switch \n        physical router \n        physical vlan for nsxt in router.\n\n\n\n\n\n\ud83d\udd36 MikroTik Hardware Demo  \n\n        \u203c\ufe0f for simple  change whole hardware switch & router to mtu:1600 L2 MTU: 1700 \u203c\ufe0f\n        \u203c\ufe0f for simple  change whole hardware switch & router to mtu:1600 L2 MTU: 1700 \u203c\ufe0f\n        \u203c\ufe0f for simple  change whole hardware switch & router to mtu:1600 L2 MTU: 1700 \u203c\ufe0f\n\n    usually all nic is under one bridge in ros.\n    and all vlan is on that bridge.\n\n    if we want change nsxt`s vlan`s mtu.  must change bridge`s mtu first.\n    if want change birdge`s mtu.  must change all nic`s mtu under that bridge first.\n\n    so usually set the whole switch & router to mtu:1600 or High...\n")),(0,o.kt)("p",null,"\ud83d\udd35 Basic NSXT Knowledge "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\ud83d\udd36 T0 T1 Desc        \u2705\n\n    like router(T0) and switch(T1) in physical network .\n        T0 - Router:    router connect network device. (T0-T1es)\n        T1 - Switch:    switch connect client device   (T1-VMs)\n")),(0,o.kt)("p",null,"\ud83d\udd35 Traffic Type / Physical VLAN "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Physical network:        use Normal vlan.\nVirtual  network(nsxt):  use overlay-based  vlan. \n\nno matter how advanced nsxt`s overlay-based vlan is.\nit must need work at physical device like physical switch, physical nic. \n\nnormal vlan`s number is limited.   (0-4069)\noverlay-based vlan`s number is unlimited!  \nwe must splite the two normal vlan and overlay vlan away.\notherwise. you did something wrong in nsxt. it will take down the physical network too.\n\nso we create a physical vlan for nsxt only. \nall overlay-based vlan. work under that physical vlan. \n\n\n\ud83d\udd36 NSXT Overlay Physical VLAN \n\n    but in reality we need give two physical valn for nsxt`s overlay traffic.\n    nsxt is still imporve it.  maybe they will fix it someday.\n        Two Overlay Physical VLAN \u203c\ufe0f\n            Physical Host node:  Need Physical vlan:  vlan-nsx_1044-overlay-host \n            Virtual  Edge node:  Need Physical vlan:  vlan-nsx_1040-overlay-edge \n\n    \n\n\ud83d\udd36 NSXT BGP Physical VLAN \n\n    the two overlay physical vlan. let all nsxt device connect each other.\n    but still need a physical vlan to connect nsxt`s virtual world to physical world.\n        how can nsxt visit internet.  \n        how can nsxt`s overlay-vlan visit physica vlan.\n        how can physical vlan   visit nsxt `s overlay valn\n\n    all this need we connect physical router and our nsxt virtual router (Edge T0)\n    so we need a physical vlan between physical router and T0 router.\n    it is for virtual router T0`s wan connection \n\n    usually company have two physical router. in case one router dies.\n    so we give two physical vlan for T0`s WAN connection too. \n        one vlan connect to physical router_A:  vlan-nsx_1041-T0-WAN-To-Router_A\n        one vlan connect to physical router_B:  vlan-nsx_1042-T0-WAN-To-Router_B\n\n    after T0`s wan is successful connected to physical router.\n    you can setup bgp. to connect nsxt & physical network.\n    after bpg setted. \n        any connect between nsxt network and physical network use BGP physical VLAN. \n\n\n\ud83d\udd36 physical vlan summary \n\n    vlan-nsx_1044-overlay-host \n    vlan-nsx_1040-overlay-edge \n\n    vlan-nsx_1041-T0-WAN-To-Router_A\n    vlan-nsx_1042-T0-WAN-To-Router_B\n\n    two physical vlan for overlay is must. \n    one Physical vlan for T0`s WAN connection.  two is recommand.\n")),(0,o.kt)("p",null,"\ud83d\udd35 NSXT Node "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"NSXT have two kinds of node.\n    \u25aa Host node: is physical manchine\n    \u25aa Edge node: is virtual machine \n\nHost node offer physic nic to let nsxt use. / let physical computer support nsxt traffic. \n\nEdge node is like Network device in physical network.\n    nsxt as a virtual network system. of course need virtual network device\n        \u25aa Edge Node -T0 like physical router \n        \u25aa Edge Node -T1 like physical switch \n")),(0,o.kt)("p",null,"\ud83d\udd35 Edge Node NIC  \u203c\ufe0f "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"all edge is vm machine under esxi.\nso all nic in edge use esxi network`s portgroup.\nby default all edge have 4 nic.\n\nfirst one is for edge`s manager networl\nthe rest 3 are for nsxt traffic.\nT0 and T1 is have different use of this 3 nic.\nbecause T0 need connect to physical router. T1 Not.\n\n\n\ud83d\udd36 T0 Nic Demo \n\n    nic0       \u279c  esxi manager    \u279c PG-esxi-manager \n    fp-eth0    \u279c  nsxt overlay    \u279c PG-TypeC-NSX_1040-TEP-Edge   \n    fp-eth1    \u279c  nsxt vlan-01    \u279c PG-TypeC-NSX_1041-WAN_RouterA \n    fp-eth2    \u279c  nsxt vlan-02    \u279c PG-TypeC-NSX_1042-WAN_RouterB \n\n\n\ud83d\udd36 T1 Nic Demo \n\n    nic0       \u279c  esxi manager    \u279c PG-esxi-manager \n    fp-eth0    \u279c  nsxt overlay    \u279c PG-TypeC-NSX_1040-TEP-Edge   \n    fp-eth1    \u279c  nsxt vlan-01    \u279c PG-TypeC-NSX_1040-TEP-Edge\n    fp-eth2    \u279c  nsxt vlan-02    \u279c PG-TypeC-NSX_1040-TEP-Edge\n")),(0,o.kt)("p",null,"\ud83d\udd35 Segment  \u2705"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"two kinds:   \n    overlay-based (under overlay zone )\n    vlan-based    (under vlan zone)\n\n\n\ud83d\udd36 T0 Segment \u2705\n\n    \u25aa VLAN-T0-WAN-RouterA\n        zone-T0-Wan-RouterA \n        vlan: 0     \u279c  we already set vlan in esxi portgroup.\n\n    \u25aa VLAN-T0-WAN-RouterB\n        zone-T0-Wan-RouterB   \n        vlan: 0     \u279c  we already set vlan in esxi portgroup.\n")),(0,o.kt)("p",null,"\ud83d\udd35 TEP: Desc         \u2705"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"ip is for physical network.\nin nsxt`s virtual network. they use tep instead of ip.  they are same thing. \nall overlay-based traffice supported device in nsxt need tep.\nso physical host node.  and virtual edge vm. all need tep ip.\n\ntep`s package size is bigger than ip. \nso it can not work on normal ip.\nso they create tep.\n")),(0,o.kt)("p",null,"\ud83d\udd35 TEP: Host & Edge  \ud83d\udcaf"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\u203c\ufe0f for simple edge tep and host tep use two physical vlan \u203c\ufe0f\n\u203c\ufe0f for simple edge tep and host tep use two physical vlan \u203c\ufe0f\n\u203c\ufe0f for simple edge tep and host tep use two physical vlan \u203c\ufe0f\n\n\n    \ud83d\udd36 offical reason \n\n        https://kb.vmware.com/s/article/83743\n\n        Edge TEP and ESXi host TEP can be configured on the same VLAN in the following configurations:\n\n        - Edge VM TEP interface connected to a portgroup on an ESXi host not prepared for NSX\n        - Edge VM TEP interface connected to a portgroup on a switch not used by NSX, on an ESXi host prepared for NSX\n        - Edge VM TEP interface connected to a logical switch on a vDS7 with NSX-T 3.1.0 or above\n        - Edge VM TEP interface connected to a logical switch on a NVDS with NSX-T 3.1.0 or above\n\n\n        Edge TEP and ESXi host TEP must be on separate VLANs in the following configurations:\n\n        - Edge VM TEP interface connected to a vDS portgroup where that vDS is used by NSX-T\n        - Edge VM TEP interface connected to a logical switch on vDS/NVDS prior to NSX-T 3.1.0\n\n\n\n        \ud83d\udd36 good file 02\n\n            https://www.virten.net/2020/11/nsx-t-3-1-enhancement-shared-esxi-and-edge-transport-vlan-with-a-single-uplink/\n")),(0,o.kt)("p",null,"\ud83d\udd35 time out set      \u2705"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\ud83d\udd36 manager & edge \n\n    NSXT-G3> set cli-timeout 0\n    NSXT-G3>\n    NSXT-G3> get cli-timeout\n    Wed Jun 01 2022 UTC 23:10:13.593\n    Timeout disabled\n")),(0,o.kt)("p",null,"\ud83d\udd35 CLI  Commands  "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\ud83d\udd35 all nsxt cli \n\n    https://vdc-download.vmware.com/vmwb-repository/dcr-public/cc42e3c1-eb34-4567-a916-147e79798957/8264605c-a5e1-49a8-b603-cc78621eeeab/cli.html\n\n\n\ud83d\udd35 Default Password  \ud83d\udcaf\n\n    admin / default \n    default password is : default    not password or passwd ...\n\n\n\ud83d\udd35 Edge IP & Hostname \u2705\n\n    ssh to vm use admin account.\n\n    NSXTEdge> get interfaces\n    NSXTEdge> set interface eth0 ip 10.219.219.103/24 gateway 10.219.219.11 plane mgmt\n\n    NSXTEdge> get hostname\n    NSXTEdge> set hostname NSXT-Edge-T0-G3.RV\n")),(0,o.kt)("p",null,"\ud83d\udd35 Misc   \u274c"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\ud83d\udd36 Sync time \u2705\n\n    ssh use root !!!  \n    sudo timedatectl set-timezone America/Los_Angeles\n\n\n\n\ud83d\udd36 Node \n\n    nsxt manager:   Host node   \u279c physical host like esxi.\n    nsxt manager:   edge node   \u279c VM; T0 T1 use same vm. just differet config.     \n\n        host node must be physical machine.\n        not trt install three vm esxi in a physical esxi. \n        a lot error will happen. just not waste time.\n\n\n\n    \u203c\ufe0f esxi \u865a\u62df\u673a \u662f\u5b89\u88c5\u4e0d\u4e86\u7684. \u5c31\u662f \u4e00\u4e2aesxi\u5b9e\u4f53\u673a\u91cc\u9762 \u5b89\u88c5esxi\u865a\u62df\u673a. \u91cc\u9762\u7684\u90a3\u4e2a\u4e0d\u884c\u7684 \u203c\ufe0f \n    \u203c\ufe0f esxi \u865a\u62df\u673a \u662f\u5b89\u88c5\u4e0d\u4e86\u7684. \u5c31\u662f \u4e00\u4e2aesxi\u5b9e\u4f53\u673a\u91cc\u9762 \u5b89\u88c5esxi\u865a\u62df\u673a. \u91cc\u9762\u7684\u90a3\u4e2a\u4e0d\u884c\u7684 \u203c\ufe0f \n\n\n    nsxt \u652f\u6301\u8de8\u5e73\u53f0. \u4e0d\u4ec5\u4ec5\u652f\u6301esxi. \u8fd8\u6709 linux / kmv / \u7b49\u7b49\n    \u8981\u8ba9 \u7269\u7406\u673a\u5668 \u652f\u6301 nsxt. \u90a3\u4e48\u80af\u5b9a\u662f\u5185\u6838\u5c42\u9762\u7684\u4e86.\n    \u4e0d\u540c\u7684\u7cfb\u7edf \u5b89\u88c5\u5bf9\u5e94\u7684nsxt \u5185\u6838\u6a21\u5757\u5c31\u884c.\n\n    kvm \u7684\u7269\u7406\u4e3b\u673a\u6709kvm \u7684 nsxt \u63d2\u4ef6.\n    debian/linux \u7684\u7269\u7406\u4e3b\u673a \u6709 debian/linux \u7684nsxt \u63d2\u4ef6.\n    esxi \u7269\u7406\u4e3b\u673a\u6709 esxi \u7684 nsxt \u63d2\u4ef6.\n\n    \u5b89\u88c5\u4e5f\u5206 \u624b\u52a8\u548c\u81ea\u52a8.\n    esxi \u4e3b\u673a\u7684\u8bdd.  nsx-t \u4e0a\u53ef\u4ee5\u81ea\u52a8\u5b89\u88c5. \n\n    node >> host transport node >>\n        managed by vCenter:   nsxt\u4f60\u52a0\u4e86vcenter . \u6240\u6709esxi \u90fd\u81ea\u5df1\u52a0\u5728\u8fd9\u4e0b\u9762. \u4e0d\u9700\u518d\u624b\u52a8\u52a0host.\n        managed by stand host:  \u6ca1\u52a0vcenter. \u624b\u52a8\u4e00\u4e2a\u4e2a\u52a0\u7269\u7406\u673a\u5668\u7684 \u9009\u8fd9\u91cc.\n\n    \u4e00\u6b65\u6b65\u4e0b\u53bb \u5c31\u81ea\u52a8\u7ed9\u4f60\u5b89\u88c5 esxi \u9700\u8981\u7684 nsxt \u5185\u6838.   \u8fd8\u521b\u5efa\u4e86 nvds \u5206\u5e03\u5f0f\u4ea4\u6362\u673a.\n\n\n    \u5230\u8fd9\u91cc \u81ea\u52a8\u521b\u5efa\u4e86 \u51e0\u4e2a vmm10 / 100  \u7f51\u5361.\n    \u4f46\u662f\u6ca1\u6709 ted ip.   dhcp \u6ca1\u8bbe\u7f6e\u8fc7\u554a.\n\n\n    \n    \ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\n    \u73b0\u5728 \u7269\u7406\u673a\u5668\u5df2\u7ecf\u652f\u6301 nsxt \u4e86.   \u7136\u540e\u4e5f\u5206\u4e86ip.\n    \u76f8\u5f53\u4e8e\u4e00\u4e2a \u865a\u62df\u53d1 \u5206\u5e03\u5f0f\u4ea4\u6362\u673a\u5df2\u7ecf\u5efa\u597d.\n\n\n    \u7269\u7406\u4ea4\u6362\u673a >> \u7269\u7406\u5b9e\u4f53\u673a: \u521b\u5efa \u865a\u62df\u5206\u5e03\u5f0f\u4ea4\u6362\u673a >>  \n    \u5206\u5e03\u5f0f\u4ea4\u6362\u673a\u521b\u5efa\u597d \u4f60\u5c31\u53ef\u4ee5\u5f53\u8fd0\u8425\u5546\u4e86.  \u63a5\u4e0b\u53bb \u5c31\u662f  \u4e3b\u8def\u7531\u5668t0  \u548c \u6b21\u8def\u7531\u5668t1\n    \u6700\u597dt1 \u4e0b\u9762\u63a5\u865a\u62df\u673a.  \u7f51\u7edc\u5c31\u5b8c\u6210\u4e86.\n\n    \n    \n    \n    \ud83d\udd36 t1  \u4e5f\u5206\u4e24\u79cd.\n\n        t1-DR  \u6bcf\u53f0\u7269\u7406\u673a \u5b89\u88c5 nsx \u540e. \u5c31\u652f\u6301nsxt \u7f51\u7edc\u4e86.\n        t1-SR:  \u4f46\u662f\u8981\u628a\u591a\u4e2a\u7269\u7406\u4e3b\u673a  \u7684\u7f51\u7edc\u8fde\u5230\u4e00\u4e2a t1\u91cc\u9762! ???\n\n\n\n\n    \ud83d\udd35 \u7f51\u7edc\u8def\u5f84 \n\n\n    \ud83d\udd36 \u865a\u62df\u5316 \u7269\u7406\u7f51\u5361 \n\n        \u7269\u7406\u4ea4\u6362\u673a  >>  esxi \u4e3b\u673a\u7269\u7406\u7f51\u5361 \u279c  \u914d\u7f6ensx\u540e \n            \u901a\u8fc7\u5b89\u88c5\u63d2\u4ef6, \u628a\u7269\u7406\u7f51\u5361 \u865a\u62df\u6210 nsxt \u53ef\u7528\u7684\u7f51\u5361. \n            \u914d\u7f6e uplink. \u54ea\u4e9b\u7f51\u5361\u5206\u7ed9nsx \u5c31\u5728\u8fd9\u91cc\u8bbe.\n            \u8bbe\u597d\u540e\u5c31\u6709\u4e86 tep ip.\n\n        \u76f8\u5f53\u4e8e\u5bb6\u5ead\u7f51\u7edc \u8fde\u597d\u4e86\u8fdb\u6765\u7684\u5bbd\u5e26.\n        \u4e0b\u9762\u914d\u603b\u8def\u7531.T0.\n\n\n    \ud83d\udd36 T0 - SR & DR \n\n        T0 \u867d\u7136\u662f\u603b\u8def\u7531.  \u5e94\u8be5\u4e00\u4e2a\u5c31\u591f\u4e86.\n        \u4f46\u662f\u865a\u62df\u5316. \u7ec6\u5206\u4e86\u603b\u8def\u7531\u5668\u7684\u529f\u80fd. \n        T0-SR \u63d0\u4f9b\u670d\u52a1: dhcp / nat / nds ... ...\n        T0-DR \u63d0\u4f9b \u5206\u5e03\u5f0f\u8fde\u63a5: ( \u8fde\u6240\u6709 T1. \u6b21\u8def\u7531 )\n\n        T0 \u662f\u7528 nsxt-edge \u955c\u50cf\u865a\u62df\u51fa\u6765\u7684\u865a\u62df\u673a.\n        \u4e00\u4e2ansx\u7f51\u7edc \u53ea\u8981\u4e24\u4e2a T0 \u865a\u62df\u673a:  \u4e00\u4e2a T0-SR  \u4e00\u4e2aT0-DR \n\n\n    \ud83d\udd36 T1- SR & DR \n\n        T1  \u53ef\u4ee5\u770b\u6210 \u5206\u5e03\u5f0f\u4ea4\u6362\u673a.\n        \u4e5f\u7ec6\u5206\u6210\u4e24\u4e2a.\n\n        T1-DR:  \u628a \u6240\u6709\u7684 nsxt \u7f51\u5361\u8fde\u8d77\u6765.\n        T1-SR:  \u8ba9\u7269\u7406\u7f51\u5361 \u652f\u6301 nsxt \u529f\u80fd\n\n        T1-SR \u4e0d\u662f\u865a\u62df\u673a. \u4e0d\u7528\u90e8\u7f72. \u5c31\u662f\u4e00\u4e2a\u63d2\u4ef6 \u914dnsx\u7f51\u7edc\u7684\u65f6\u5019\u4f1a\u81ea\u52a8\u5b89\u88c5. \n        \u6bcf\u4e2a\u4e3b\u673a\u90fd\u8981\u914dt1-sr.  \u7136\u540e\u9009\u62e9uplink . \u4e5f\u5c31\u662f\u54ea\u4e9b\u7f51\u5361\u5f00 nsxt \u529f\u80fd.\n        \u8fd9\u91cc\u7b2c\u4e00\u6b65\u5c31\u5df2\u7ecf\u5f04\u8fc7\u4e86. \n\n        \u6211\u4eec\u73b0\u5728\u8981\u642d\u5efa\u7684\u662f T1-SR \n        \u4e5f\u662f\u901a\u8fc7 nsxt edge \u955c\u50cf\u6765\u642d\u5efa\u865a\u62df\u673a. \u7136\u540e\u914d\u7f6e\u6210 T1-SR \u89d2\u8272. \n\n    \n")),(0,o.kt)("p",null,"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35   Real Demo\n\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35   Real Demo\n\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35   Real Demo "),(0,o.kt)("p",null,"\ud83d\udd35 Physical VLAN Prepair "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\ud83d\udd36 Hardware network device \n\n    Mikrotik: Router \u279c  RB4011    10.219.219.11 \n    Mikrotik: Switch \u279c  CRS328    10.219.219.22 \n        crs is L3 switch. is can be router too. here as a backup router. \n\n\n\ud83d\udd36 Hardware VLAN \n\n    RB4011  VLAN-NSX_1044-Overlay-Host          10.44.44.11/24  \u203c\ufe0f this need enable dhcp \u203c\ufe0f\n    RB4011  VLAN-NSX_1040-Overlay-Edge          10.40.40.11/24\n    RB4011  VLAN-NSX_1041-VLAN-T0-WAN_RB4011    10.41.41.11/24\n    CRS328  VLAN-NSX_1042-VLAN-T0-WAN_CRS       10.42.42.22/24\n")),(0,o.kt)("p",null,"\ud83d\udd35 Physical ESXI NIC & PortGroup "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\ud83d\udd36 esxi \n\n    ESXI_G3             10.219.219.13\n    ESXI_G5             10.219.219.15\n\n\ud83d\udd36 esxi_g3 physical nic       1x ETH  1x TypeC  1x usb_01  1x usb_02\n\ud83d\udd36 esxi_g5 physical nic               1x TypeC  1x usb_01  1x usb_02\n\n    esxi not use any usb nic.   all usb nic is for nsxt only. \n    eth & typeC is for esxi. default switch0. \n\n\n\ud83d\udd36 ESXI-G3 & G5 PortGroup \n\n    PG-ESX_1219-Manager                VLAN: 1219\n    PG-NSX_1044-Overlay-Host           VLAN: 1044\n    PG-NSX_1040-Overlay-Edge           VLAN: 1040\n    PG-NSX_1041-VLAN-T0-WAN_RB4011     VLAN: 1041\n    PG-NSX_1042-VLAN-T0-WAN_CRS328     VLAN: 1042\n")),(0,o.kt)("p",null,"\ud83d\udd35 VM IP Prepair \u2705"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\u25ce Host             Node:   physical manchie.           \u279c ESXI_G3             10.219.219.13\n\u25ce Host             Node:   physical manchie.           \u279c ESXI_G5             10.219.219.15\n\n\u25ce NSXT Manager     Node:   Virtual Machine in ESXI_G3  \u279c VM_NSXT-Manager-G3  10.219.219.3\n\n\u25ce NSXT Edge T0-G3  Node:   Virtual Machine in ESXI_G5  \u279c VM_NSXT-T0-G3       10.219.219.103  \n\u25ce NSXT Edge T0-G5  Node:   Virtual Machine in ESXI_G3  \u279c VM_NSXT-T0-G5       10.219.219.105 \n\u25ce NSXT Edge T1-G3  Node:   Virtual Machine in ESXI_G3  \u279c VM_NSXT-T1-G3       10.219.219.113 \n\u25ce NSXT Edge T1-G5  Node:   Virtual Machine in ESXI_G5  \u279c VM_NSXT-T1-G5       10.219.219.115\n")),(0,o.kt)("p",null,"\ud83d\udd35 Manager Node NIC Mapping "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\ud83d\udd36 Manager nic  mapping \n\n    all nsxt host node and edge node connect manager use esxi manager vlan .\n    only need one nic for manager. \n")),(0,o.kt)("p",null,"\ud83d\udd35 T0 Node Nic Mapping"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\ud83d\udd36 VM_NSXT-Edge-T0-G3    4 vNIC.  \n\n    vm-nic01: eth0       PG-ESX_1219-Manager             \n    vm-nci02: fp-eth0    PG-NSX_1040-Overlay-TEP-Edge         \n    vm-nci03: fp-eth1    PG-NSX_1041-VLAN-T0-WAN_RB4011         \n    vm-nci04: fp-eth2    PG-NSX_1042-VLAN-T0-WAN_CRS328       \n\n\n\ud83d\udd36 VM_NSXT-Edge-T0-G5    4 vNIC.  \n\n    vm-nic01: eth0       PG-ESX_1219-Manager             \n    vm-nci02: fp-eth0    PG-NSX_1040-Overlay-TEP-Edge         \n    vm-nci03: fp-eth1    PG-NSX_1041-VLAN-T0-WAN_RB4011         \n    vm-nci04: fp-eth2    PG-NSX_1042-VLAN-T0-WAN_CRS328      \n")),(0,o.kt)("p",null,"\ud83d\udd35 T1 Node Nic Mapping "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\ud83d\udd36 VM_NSXT-Edge-T1    4 vNIC.  \n    vm-nic01: eth0       PG-ESX_1219-Manager             \n    vm-nci02: fp-eth0    PG-NSX_1040-Overlay-TEP-Edge         \n    vm-nci03: fp-eth1    PG-NSX_1040-Overlay-TEP-Edge     \n    vm-nci04: fp-eth2    PG-NSX_1040-Overlay-TEP-Edge    \n")),(0,o.kt)("p",null,"\ud83d\udd35 Add Host To nsxt"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\ud83d\udd36 Host Node Desc \n\n    nsxt manager must have control of physical nic on all host node. \n    add all esxi/kvm host to manager, so manager can control the physical nic on all host. \n\n\n\ud83d\udd36 Add ALL host Node \n\n    https://10.219.219.53/nsx/#/app/system/home/nodes\n        >> Host transport node \n            >> add esxi-g3 & esxi-g5 \n")),(0,o.kt)("p",null,"\ud83d\udd35 Add Edge To nsxt  \ud83d\udcaf"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\ud83d\udd36 Edge Node\n\n    \u25ce login use admin                \u279c   ssh admin@10.219.219.203\n    \u25ce Check edge ip                  \u279c   NSXTEdge>get interface eth0\n    \u25ce check manager connect status.  \u279c   NSXTEdge>get managers               \n        No managers configured\n\n\n\ud83d\udd36 Manager Node  \n\n    \u25ce ssh login use admin            \u279c   MAC ~ ssh admin@10.219.219.5\n    \u25ce get manager thumbprint         \u279c   NSXT> get certificate api thumbprint\n\n\ud83d\udd36 edge join manager \ud83d\udcaf\n\n    join management-plane <NSX Manager FQDN> username admin thumbprint <thumbprint>\n    join management-plane 10.219.219.3 username admin thumbprint 79ae01acae330fbf6fa409fa2b6159f7ed591a0beaa71394f7db9e9d170579f4\n")),(0,o.kt)("p",null,"\ud83d\udd35 Transport Zone Prepair "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\u25ce Zone-Overlay-Host    type overlay   \n\u25ce Zone-Overlay-Edge    type overlay \n\u25ce Zone-VLAN-T0-RB4011  type vlan     \n\u25ce Zone-VLAN-T0-CRS328  type vlan     \n")),(0,o.kt)("p",null,"\ud83d\udd35 Uplink Profile  "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\u203c\ufe0f only profile for host need vlan.  all other use esxi portgroup(have vlan set alreay!! )  \u203c\ufe0f \n\u203c\ufe0f only profile for host need vlan.  all other use esxi portgroup(have vlan set alreay!! )  \u203c\ufe0f \n\u203c\ufe0f only profile for host need vlan.  all other use esxi portgroup(have vlan set alreay!! )  \u203c\ufe0f \n\n\u25aa For Host     Profile-Host-Overlay_1044  \u279c 2 nic  loadbalance   & Transport VLAN: 1044 \n\u25aa For T0       Profile-T0-Overlay         \u279c 1 nic  loadbalance   & Transport VLAN: 0\n\u25aa For T0       Profile-T0-VLAN-RB4011     \u279c 1 nic  loadbalance   & Transport VLAN: 0\n\u25aa For T0       Profile-T0-VLAN-CRS328     \u279c 1 nic  loadbalance   & Transport VLAN: 0\n\u25aa For T1       Profile-T1-Overlay         \u279c 3 nic  loadbalance   & Transport VLAN: 0\n")),(0,o.kt)("p",null,"\ud83d\udd35 Host Node Config \u2705"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"ESXI-G3 & ESXI-G5  \n\n    Transport Zone:     Zone-overlay-Host \n    Uplink Profile:     Profile-Host-Overlay_1044\n    IP:                 DHCP.       (from rb4011 vlan_1044)\n    nic:                vusb0,vusb1 (get name form esxi >> netwrok >> physical nic >> )\n")),(0,o.kt)("p",null,"\ud83d\udd35 Edge Node Ip Pool Prepair "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"host node can use dhcp from physical router.\nedge node can`t.   so create a ip pool in nsxt.(something like dhcp too, it is nsxt network`s dhcp. )\n\nmanaegr >> networking >> ip address pools >> add\n    Pool-Overlay-Edge \n        subnets: ip range \n            CIDR:  10.40.40.0/24                     \u279c  use physical overlay-edge`s vlan info.\n            IP Ranges:  10.40.40.100-10.40.40.200    \u279c  ... \n            Gateway ip:  10.40.40.11                 \u279c \u203c\ufe0f \n\n\ud83d\udd36 Gateway desc \n\n    we have two overlay vlan .\n    we sepreate it because vmware still not support one vlan/ or recommand use two vlan. \n    but the two overlay vlan still need connected!\n    so both your overlay-edge and overlay-host  need set a gateway!!\n    in gateway. allow them visit each other.\n        if gateway is firewall.  by default. visit between two vlan is denyed.\n        if gateway is Router.  by default. visit between two vlan is allowed.\n")),(0,o.kt)("p",null,"\ud83d\udd35 T0-G3 T0-G5 Node Config "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\u203c\ufe0f have a default switch.  we use it for overlay  traffic;\n  still need create two switch. for T0`WAN. need connect to two physical router.\n\n\u203c\ufe0f only overlay zone need tep ip.    vlan zone no need ip! \u203c\ufe0f \n\n\nnsxHostSwitch (default switch)\n        Transport Zone:     Zone-Overlay-Edge \n        Uplink Profile:     Profile-T0-Overlay\n        IP:                 IP Pool >> Pool-Overlay-Edge\n        nic:                fp-eth0 \n\nSwitch-To-RB4011 (Create )\n        Transport Zone:     Zone-T0-RB4011\n        Uplink Profile:     Profile-T0-VLAN-RB4011\n        nic:                fp-eth1\n\nSwitch-To-CRS328 (Create )\n        Transport Zone:     Zone-T0-CRS328\n        Uplink Profile:     Profile-T0-VLAN-CRS328\n        nic:                fp-eth2\n")),(0,o.kt)("p",null,"\ud83d\udd35 T1-G3 T1-G5 Node Config "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"nsxHostSwitch (default switch)\n        Transport Zone:     Zone-Overlay-Edge \n        Uplink Profile:     Profile-T1-Overlay, \n        IP:                 IP Pool >> Pool-Overlay-Edge\n        nic:                fp-eth0, fp-eth1, fp-eth2\n")),(0,o.kt)("p",null,"\ud83d\udd35 Host Node TEP IP Connection test \u2705 \u203c\ufe0f\u203c\ufe0f "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\ud83d\udd36 why \n\n    we have two physical vlan for overlay/tep \n    make sure host node can ping other host node \n    make sure edge node can ping other edge node \n\n\n\ud83d\udd36 Host TEP ping Test \n\n    root ssh to esxi host. \n    get tep(vxlan) ip      >>   esxcfg-vmknic -l \n    tep(vxlan) ping test   >>   ping ++netstack=vxlan 10.44.44.59 -s 1572 -d -I vmk10\n    3 packets transmitted, 0 packets received, 100% packet loss \u274c\u274c\u274c\u274c\u274c\u274c\n\n    \u203c\ufe0f ping ++netstack=vxlan 10.44.44.59 -s 1572 -d -I vmk10 \u203c\ufe0f\n    \u203c\ufe0f ping ++netstack=vxlan 10.44.44.59 -s 1572 -d -I vmk10 \u203c\ufe0f\n    \u203c\ufe0f ping ++netstack=vxlan 10.44.44.59 -s 1572 -d -I vmk10 \u203c\ufe0f\n            rember the ping test size is 1572  for  1600 mtu.\n            rember the ping test size is 8972  for  9000 mtu.\n                -s means payload size.\n                not the real package size. \n                real package size = payload + 28 for icmp and ip. \n\n\n    \ud83d\udc1e traceroute  \u2705\n\n        [root@ESXI-HW-G3:~] traceroute ++netstack=vxlan 10.44.44.59\n            traceroute to 10.44.44.59 (10.44.44.59), 64 hops max\n            1   10.44.44.59  0.403ms  0.317ms  0.305ms\n\n\n    \ud83d\udc1e Ping -s  \u274c\n\n        [root@ESXI-HW-G3:~] ping ++netstack=vxlan 10.44.44.59 -s 1500 -d -I vmk10\n        PING 10.44.44.59 (10.44.44.59): 1500 data bytes\n        1508 bytes from 10.44.44.59: icmp_seq=0 ttl=64 time=0.596 ms\n        1508 bytes from 10.44.44.59: icmp_seq=1 ttl=64 time=0.590 ms\n\n        [root@ESXI-HW-G3:~] ping ++netstack=vxlan 10.44.44.59 -s 1600 -d -I vmk10\n        PING 10.44.44.59 (10.44.44.59): 1600 data bytes\n        sendto() failed (Message too long)\n        sendto() failed (Message too long)\n\n\n        \ud83d\udc1e Ping -s -I desc \n            -s  \u279c  set ping package size .\n            -I  \u279c  set use which nic to ping out \n\n            use ping --help check what -s means.\n                in simple set how big the package sent.\n                    normal network`s mtu is 1500.  \n                    means the biggest package size should under 1500. \n                    other wise the package will be droped by a lot network device.\n                    like pc`s nic.  switch. router ...\n\n                nsxt`s overlay network must use mtu >= 1600. \n                so we have to test nsxt`s network use a large mtu than normal.\n                and we need choose what nic to send traffic too.  use -d nicname.\n\n                we ping use mtu 1600 failed.  we found the problem.\n                the problem is mtu size. \n                it is nothing about nsxt. \n                it is about your physical network not support large mtu.\n                or our physical network support large mtu. just need some config.\n\n                for esxi usb nic. it will not work at mtu 9000.  \n                but mtu 4000 should be ok.  of course nsxt only need mtu 1600.\n                so try fix it. \n\n                \n    \ud83d\udc1e MTU - Debug_01:  Mikrotik CRS328 Physical Switch\n    \n        host node tep use vlan 1044.\n        create a vlan in switch. and give that vlan a ip:  10.44.44.22 \n        and ping all host node`s tep ip \n\n            [Miranda@MikroTik] > ping 10.44.44.66 size=1600\n            SEQ HOST                                     SIZE TTL TIME       STATUS        \n                0 10.44.44.66                                                  timeout       \n                1 10.44.44.66                                                  timeout       \n                2 10.44.44.66                                                  timeout       \n                sent=3 received=0 packet-loss=100% \n\n            [Miranda@MikroTik] > ping 10.44.44.66 size=1500\n            SEQ HOST                                     SIZE TTL TIME       STATUS        \n                0 10.44.44.66                              1500  64 557us     \n                1 10.44.44.66                              1500  64 541us     \n                2 10.44.44.66                              1500  64 498us     \n\n\n        \ud83d\udd36 how fix \n\n            set vlan_1044 `s mtu size in switch. \n            vlan_1044 is created in bridge.  that bridge have all ports.\n            if we change mtu in that bridge. all other device will efficted.\n\n            make another bridge:  Bridge-NSX-MTU_1600 \n            put all nsxt host node`s nic to that bridge.\n                we can not change vlan`s mtu size directry.\n                    we need change all the nic`s mtu under Bridge-NSX-MTU_1600  to 1600 \n                        then the vlan`s mtu size on Bridge-NSX-MTU_1600 will automatic chaneg to 1600.\n\n        \ud83d\udd36 Mikrotik  MTU vs L2MTU vs Actual MTU\n\n            there is two MTU:  MTU  and L2 MTU. \n\n                L2 MTU is for vlan   package \n                MTU    is for normal package   \n\n                    default MTU    is 1500\n                    default L2 MTU is 1592  \n                        so normal vlan should work.\n                        but nsxt`s overlay need 1600.\n\n                            so we change \n                                mtu    to 1600.\n                                l2 mtu to 1700.  it should work \n\n                then the tep vlan under Bridge-NSX-MTU_1600\n                    L2 mtu automatic changed to 1696\n                    mtu still 1500.\n                        manual change it to 1600.\n\n\n        \ud83d\udd36 Router config \n\n            i have a router above switch. \n            i don`t want change whole network to large mtu. \n            a lot problem will happen.   so i only chaneg mtu for nsxt host node`s nic on switch.\n            nsxt `s tep need dhcp. \n                so move everything nsxt related from router to switch. \n                    like dhcp for tep.  all nsxt vlans. \n                \n        \n        \ud83d\udd36 ping again. \u2705 \n\n            [root@ESXI-HW-G3:~] ping ++netstack=vxlan 10.44.44.22 -s 1572 -d -I vmk10 -c 10000\n            PING 10.44.44.22 (10.44.44.22): 1572 data bytes\n            1580 bytes from 10.44.44.22: icmp_seq=0 ttl=64 time=0.480 ms\n\n            --- 10.44.44.22 ping statistics ---\n            1 packets transmitted, 1 packets received, 0% packet loss\n\n\n        \ud83d\udd36 ping host node. \n\n            [root@ESXI-HW-G3:~] ping ++netstack=vxlan 10.44.44.197 -s 1572 -d -I vmk10 -c 10000\n            done. \n")),(0,o.kt)("p",null,"\ud83d\udd35 Edge Node TEP IP Connection test"),(0,o.kt)("p",null,"\ud83d\udd35 Cluster "),(0,o.kt)("p",null,"\ud83d\udd35 add t0 t1 gateway "),(0,o.kt)("p",null,"\ud83d\udd35 T0 Segment Prepair "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"segment-vlan-T0-RB4011  Zone-T0-RB4011 VLAN: 0\nsegment-vlan-T0-CRS328  Zone-T0-CRS328 VLAN: 0\n    we have set vlan in esxi portgroup already. so here 0\n")),(0,o.kt)("p",null,"\ud83d\udd35 T0 WAN interface config "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"as a virtual gateway . it need wan ip to connect physical router.\nadd wan interface and set T0`s wan`s ip first.\n\nnsxt >> T0 >> edit >> interfaces >>add \nbecause we have two T0. VM. \nevery T0 have two interace (one for RB4011 one for CRS328)\nso we need add totally four interface here. \nif you only one T0. and one nic for T0`s vlan traffic. only need add one.\nthe most important is. connect physical router and this t0.\nif you can ping successful use vlan_1041 or vlan_1042 you can go next: bgp.\n\nthis is T0`s wan ip. so we need give an ip address for every wan interface. \n    all type: extenal \n\nT0-G3-RB4011:  type: extenal   10.41.41.33/24    segment-vlan-t0-rb4011    Node: T0-G3  \nT0-G3-CRS328:  type: extenal   10.42.42.33/24    segment-vlan-t0-crs328    Node: T0-G3\nT0-G5-RB4011:  type: extenal   10.41.41.55/24    segment-vlan-t0-rb4011    Node: T0-G5\nT0-G5-CRS328:  type: extenal   10.42.42.55/24    segment-vlan-t0-crs328    Node: T0-G5\n\nthen ping form physical router. make sure works.\n")),(0,o.kt)("p",null,"\ud83d\udd35 T0 BGP config "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\ud83d\udd36 Set Loca AS \n\n    set T0     local AS:   65400\n    set RB4011 local AS:   65411\n    Set CRS328 local AS:   65422\n\n\n\ud83d\udd36 T0 BGP Config \n\n    we need connect two physical router. so we need add two bgp\n    very simple only need. pgysical gateway`s ip and AS number.\n    if you have two T0 VM. you need config Source address.  if no.  leave it default.\n\n        IP:   10.41.41.11\n        Remote AS:  65411\n        Source address: 10.41.41.33  10.41.41.55 \n\n        IP:   10.42.42.22\n        Remote AS:  65422\n        Source address: 10.42.42.33  10.42.42.55 \n\n\n\n\ud83d\udd36 RB4011(ros v7) BGP Config \n\n    winbox >> routing >> bgp >> connection >> add \n    BGP-RB4011-ToNodeT0G3\n        AS:             65411               \u279c set local AS  \n        Remote Address: 10.41.41.33/32      \u279c T0`s wan`s G3 node`s IP. \n        Remote AS:      65400               \u279c set remote AS\n        Local Rols:     ebgp \n\n    BGP-RB4011-ToNodeT0G5\n        AS:             65411               \u279c set local AS  \n        Remote Address: 10.41.41.55/32      \u279c T0`s wan`s G5 node`s IP. \n        Remote AS:      65400               \u279c set remote AS\n        Local Rols:     ebgp \n\n\n\n\ud83d\udd36 CRS328 (ros v7) BGP Config \n\n    winbox >> routing >> bgp >> connection >> add \n    BGP-CRS328-ToNodeT0G3\n        AS:             65422               \u279c set local AS  \n        Remote Address: 10.42.42.33/32      \u279c T0`s wan`s G3 node`s IP. \n        Remote AS:      65400               \u279c set remote AS\n        Local Rols:     ebgp \n\n    BGP-CRS328-ToNodeT0G5\n        AS:             65422               \u279c set local AS  \n        Remote Address: 10.42.42.55/32      \u279c T0`s wan`s G5 node`s IP. \n        Remote AS:      65400               \u279c set remote AS\n        Local Rols:     ebgp \n")),(0,o.kt)("p",null,"\ud83d\udd35 BGP Route Export "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"after bgp connected.\nwe need choose  what vlan(segment) in nsxt should giveout.\nusually segment is connect to T1. \nso you need setup T1, allow T1 to share segment to T0. \nthen T0 can share segment to Physical router.\n\n\ncreate some segment. \ncreate t1.\nconnect segment to T1. \nconnect T1 to T0 \n")),(0,o.kt)("p",null,"\ud83d\udd36 T1 BGP share Setting "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"T1>> edit >> Route advertisment >> \n    enable :  all connected segmanets & service ports \n")),(0,o.kt)("p",null,"\ud83d\udd36 T0 BGP share setting "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"    T0 >> edit >> Route re-distitbution >> add \n        route re-distribution >> \n\n    enable connected interace & segments.\n        on both T0 subnets and T1 subnets \n    \n    then go rb4011  ip >> routing \n        should have some new . begian with Db. \n        then you can ping nsxt vlan. form physical router. \n")),(0,o.kt)("p",null,"\ud83d\udd35 configurations"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"you did it.\n    it took me weeks. -.-\n")))}p.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkblog_never_del=self.webpackChunkblog_never_del||[]).push([[885],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>f});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=s(t),f=o,k=d["".concat(c,".").concat(f)]||d[f]||u[f]||a;return t?r.createElement(k,l(l({ref:n},p),{},{components:t})):r.createElement(k,l({ref:n},p))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,l=new Array(a);l[0]=d;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var s=2;s<a;s++)l[s]=t[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},6357:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>s});var r=t(7462),o=(t(7294),t(3905));const a={sidebar_position:2930,title:"\ud83c\udfaa\ud83c\udfaa\ud83d\udc2c\u2638\ufe0f\u2638\ufe0f5\ufe0f\u20e3 NET \u279c Basic"},l="NET \u2736 Demo",i={unversionedId:"\ud83c\udfaa\ud83c\udfaa \ud83d\udc2c\u2638\ufe0f\u2638\ufe0f-5\ufe0f\u20e3 NET \u279c",id:"\ud83c\udfaa\ud83c\udfaa \ud83d\udc2c\u2638\ufe0f\u2638\ufe0f-5\ufe0f\u20e3 NET \u279c",title:"\ud83c\udfaa\ud83c\udfaa\ud83d\udc2c\u2638\ufe0f\u2638\ufe0f5\ufe0f\u20e3 NET \u279c Basic",description:"\ud83d\udd35 K8s Network \u2705",source:"@site/docs/\ud83c\udfaa\ud83c\udfaa \ud83d\udc2c\u2638\ufe0f\u2638\ufe0f-5\ufe0f\u20e3 NET \u279c.md",sourceDirName:".",slug:"/\ud83c\udfaa\ud83c\udfaa \ud83d\udc2c\u2638\ufe0f\u2638\ufe0f-5\ufe0f\u20e3 NET \u279c",permalink:"/\ud83c\udfaa\ud83c\udfaa \ud83d\udc2c\u2638\ufe0f\u2638\ufe0f-5\ufe0f\u20e3 NET \u279c",draft:!1,tags:[],version:"current",sidebarPosition:2930,frontMatter:{sidebar_position:2930,title:"\ud83c\udfaa\ud83c\udfaa\ud83d\udc2c\u2638\ufe0f\u2638\ufe0f5\ufe0f\u20e3 NET \u279c Basic"},sidebar:"defaultSidebar",previous:{title:"\ud83c\udfaa\ud83c\udfaa\ud83d\udc2c\u2638\ufe0f\u2638\ufe0f3\ufe0f\u20e3 STO \u279c Demo",permalink:"/\ud83c\udfaa\ud83c\udfaa \ud83d\udc2c\u2638\ufe0f\u2638\ufe0f-3\ufe0f\u20e3 STO \u279c\u279c Demo"},next:{title:"\ud83c\udfaa\ud83c\udfaa\ud83d\udc2c\u2638\ufe0f\u2638\ufe0f\u2638\ufe0f Demo \u279c \u274c",permalink:"/\ud83c\udfaa\ud83c\udfaa \ud83d\udc2c\u2638\ufe0f\u2638\ufe0f\u2638\ufe0f Demo \u279c xxx"}},c={},s=[],p={toc:s};function u(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"net--demo"},"NET \u2736 Demo"),(0,o.kt)("p",null,"\ud83d\udd35 K8s Network \u2705"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"wan traffic:   inside cluster <> outside cluster \nlan traffic:   inside cluster <> inside  cluster \n\n\nwan - level 4  loadbalance:  \u279c   protocal +  port  to find pod  \u279c 1. LoadBalance\nwan - Level 7  loacbalance:  \u279c   domain   +  url   to fins pod  \u279c 2. Ingress \nlan -                        \u279c   podname           to find pod  \u279c 3. ClusterIP \nDocker                       \u279c   Host                           \u279c 4. NodePort   \n\n\n\n\n    loadbalance you can choose any you like:  nginx/traefik/HA \n")),(0,o.kt)("p",null,"\ud83d\udd35 How config network "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"not like docker . neet create docker network first ??\n")),(0,o.kt)("p",null,"\ud83d\udd35 why "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"in one node. container network is easy\nin cluster.  container network is much hard.\n    need connect pod in different physical node. \n\n\nvlan  is virtual network over real network.\nvxlan is virtual network over vlan.\n\nk8s cluster use vxlan. so k8s will not impact your real vlan.\njust like docker network will not impact host network.\n\nso overlay/vxlan is just something like vlan. very easy. \n")),(0,o.kt)("p",null,"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35"),(0,o.kt)("p",null,"\ud83d\udcd7\n",(0,o.kt)("a",{parentName:"p",href:"https://kubernetes.io/zh-cn/docs/concepts/extend-kubernetes/compute-storage-net/network-plugins/"},"https://kubernetes.io/zh-cn/docs/concepts/extend-kubernetes/compute-storage-net/network-plugins/")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"https://morningspace.github.io/tech/k8s-net-cni/\n\nhttps://cloud.tencent.com/developer/article/1804680\n")),(0,o.kt)("p",null,"\ud83d\udd35 K8s default network "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"none \nhost \ndefault bridge \ncustom ...      \n\n\n\nk8s use CNI to build cluster network. \n    CNI: Container Network Interface.\n    CNI  have lots plugin to use. \n        Flannel  \u279c overlay \n        Calico\n")),(0,o.kt)("p",null,"\ud83d\udd35 Overlay / Route / Underlay "),(0,o.kt)("p",null,"\ud83d\udd35 network server /network permit "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"any pod`s traffic (lan + wan)  \nneed set/config  permit/service  first. \notherwise default is deny all.\n")))}u.isMDXComponent=!0}}]);
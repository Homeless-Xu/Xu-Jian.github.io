"use strict";(self.webpackChunkblog_never_del=self.webpackChunkblog_never_del||[]).push([[1412],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>k});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),l=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=l(t),k=o,m=u["".concat(s,".").concat(k)]||u[k]||d[k]||a;return t?r.createElement(m,c(c({ref:n},p),{},{components:t})):r.createElement(m,c({ref:n},p))}));function k(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,c=new Array(a);c[0]=u;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var l=2;l<a;l++)c[l]=t[l];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},698:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>c,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var r=t(7462),o=(t(7294),t(3905));const a={sidebar_position:2930,title:"\ud83c\udfaa\ud83c\udfaa\ud83d\udc2c Docker \u279c Basic"},c="Docker Basic",i={unversionedId:"\ud83c\udfaa\ud83c\udfaa \ud83d\udc2c Docker \u279c Basic",id:"\ud83c\udfaa\ud83c\udfaa \ud83d\udc2c Docker \u279c Basic",title:"\ud83c\udfaa\ud83c\udfaa\ud83d\udc2c Docker \u279c Basic",description:"\ud83d\udd35 Container Network Desc  \u2705",source:"@site/docs/\ud83c\udfaa\ud83c\udfaa \ud83d\udc2c Docker \u279c Basic.md",sourceDirName:".",slug:"/\ud83c\udfaa\ud83c\udfaa \ud83d\udc2c Docker \u279c Basic",permalink:"/\ud83c\udfaa\ud83c\udfaa \ud83d\udc2c Docker \u279c Basic",draft:!1,tags:[],version:"current",sidebarPosition:2930,frontMatter:{sidebar_position:2930,title:"\ud83c\udfaa\ud83c\udfaa\ud83d\udc2c Docker \u279c Basic"},sidebar:"defaultSidebar",previous:{title:"\ud83c\udfaa-9\ufe0f\u20e3 STO \ud83d\udcc0\ud83d\udcc0\ud83d\udcc0 CEPH \u279c\u279c\u279c Driver",permalink:"/\ud83c\udfaa-9\ufe0f\u20e3 STO \ud83d\udcc0\ud83d\udcc0\ud83d\udcc0 CEPH \u279c\u279c\u279c Driver"},next:{title:"\ud83c\udfaa\ud83c\udfaa\ud83d\udc2c Docker \u279c\u279c Compose",permalink:"/\ud83c\udfaa\ud83c\udfaa \ud83d\udc2c Docker \u279c\u279c Compose"}},s={},l=[],p={toc:l};function d(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"docker-basic"},"Docker Basic"),(0,o.kt)("p",null,"\ud83d\udd35 Container Network Desc  \u2705"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\ud83d\udd36 WHY \n\n    container often need connect other container.\n    How make this possible?\n    use docker`s network function.\n\n    create a network under docker.\n    put docker under same network name.\n        the docker under same network can visit other.\n\n\n\ud83d\udd36 Container Network \n\n    \u25ce sandbox:        a virtual network for container. \n    \u25ce endpoint:       nic inside container. like eth0 eth1..\n    \u25ce network name:   connect other container.\n")),(0,o.kt)("p",null,"\ud83d\udd35 Container Network Mode"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\ud83d\udd36 ls network\n\n    Docker-Prod ~ docker network ls\n    NETWORK ID     NAME                    DRIVER    SCOPE\n    37233e92a107   bridge                  bridge    local\n    97f4842d1630   host                    host      local\n    1049f50cd70b   netbox-docker_default   bridge    local\n    cb7d8f68331e   none                    null      local\n\n\n\ud83d\udd36 Mode:\n\n    Bridge    Mode \u279c Default Mode \n    Host      Mode \u279c same as host!  only without ip. \n    None      Mode \u279c container no need network. turn off network.\n    Container Mode \u279c for Connect other container \n    Custom    Mode \u279c \n\n\n\n\ud83d\udd36 Container Mode Demo\n\n    docker run -it --name foobar alpine sh\n    docker run -it --name test --net=container:foobar alpine sh\n\n        run a container first.\n            then add another container to ..container.\n             so foobar & test are in same network \n    \n\n        \u25ce check docker network:    docker inspect 9582dbec7981\n\n\n\n\ud83d\udd36 Custom Mode Demo.\n\n    # docker network create test\n    # docker network ls\n    # docker run -it --name foo --net=test alpine\n    # docker run -it --name bar --net=test alpine\n")),(0,o.kt)("p",null,"\ud83d\udd35 Docker  volume \u2705"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'\ud83d\udd36 Check \n\n    docker volume ls\n    docker volume create volume-gitea\n    docker volume inspect volume-gitea\n\n\n\ud83d\udd36 Volume Location \n\n    /var/lib/docker/volumes\n\n    we move whole docker to nas/iscsi \n        so volume is in nas too.\n\n\n\ud83d\udd36 Check Volume \n\n    docker volume inspect volume-gitea\n        "Mountpoint": "/mnt/ceph-img-Docker-prod/docker-prod-root/volumes/volume-gitea/_data",\n        "Name": "volume-gitea",\n')),(0,o.kt)("p",null,"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35"),(0,o.kt)("p",null,"\ud83d\udd35 Why "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"defaylt all docker/image save in /var/xxxxx \nit use vm`s system disk.  very small.\nhave to use a large one. like ceph disk. \n\nof if we want move docker from one vm to another vm.\nif we have ceph. just mount ceph disk to another vm.\n")),(0,o.kt)("p",null,"\ud83d\udd35 How - Ubuntu_20 \u2705"),(0,o.kt)("p",null,"\ud83d\udd36 Stop Docker "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"sudo systemctl stop docker.socket\nsudo systemctl stop docker.service\n")),(0,o.kt)("p",null,"\ud83d\udd36 Dir prepair "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"mkdir /mnt/ceph-img-Docker-prod/docker-prod-root\nmkdir /mnt/ceph-img-Docker-prod/docker-prod-data\n\nmkdir /mnt/ceph-img-Docker-test/docker-test-root\nmkdir /mnt/ceph-img-Docker-test/docker-test-data\n")),(0,o.kt)("p",null,"\ud83d\udd36 Edit config "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"sudo vi /lib/systemd/system/docker.service\n    add -g /new/path/docker before -H\n\nExecStart=/usr/bin/dockerd -H fd:// xxxx\nExecStart=/usr/bin/dockerd -g /new/path/docker -H fd:// xxxxx\n\nExecStart=/usr/bin/dockerd -g /mnt/ceph-img-Docker-prod/docker-prod-root -H fd:// xxxxx\nExecStart=/usr/bin/dockerd -g /mnt/ceph-img-Docker-test/docker-test-root -H fd:// xxxxx\n")),(0,o.kt)("p",null,"\ud83d\udd36 Move Older data"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"sudo rsync -aqxP /var/lib/docker/ /new/path/docker\nsudo rsync -aqxP /var/lib/docker/ /mnt/ceph-img-Docker-prod/docker-prod-root\nsudo rsync -aqxP /var/lib/docker/ /mnt/ceph-img-Docker-test/docker-test-root\n")),(0,o.kt)("p",null,"\ud83d\udd36 Start server "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"sudo systemctl daemon-reload\nsudo systemctl start docker\n")),(0,o.kt)("p",null,"\ud83d\udd36 Check "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"ps aux | grep -i docker | grep -v grep\n")),(0,o.kt)("p",null,"\ud83d\udd35 Namespace & cgroup \u2705"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Docker Container = Namespace + cgroup \n")),(0,o.kt)("p",null,"  \ud83d\udd36 Namespace "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\u203c\ufe0f Namespace Function:   quarente \u203c\ufe0f\n\nK8s Default Namespace:   Default / Kube-system / Kube-public  \n\nlike python version.\nsome app need python2. other need python3.\nif you only have one vm.  need both run python2 & python3. \nyou may need namespace.   \ncreate one namespace install python2 \ncreate one namespace install python3 \n  let different app run at different namespace.\n  so both app can run good! \n")),(0,o.kt)("p",null,"  \ud83d\udd36 cgroup "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"in linux one task can use all host resource: all cpu/ram/disk \nbut this will make other task slow/die \nso they create cgroup:  limit the resource task can use.  \ncgroup make docker contain use how much cpu/ram/disk possible. \nevery container have a different cgroup. \nand you can set how much resource that cgroup/container can use .\n")))}d.isMDXComponent=!0}}]);
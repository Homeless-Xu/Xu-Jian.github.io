"use strict";(self.webpackChunkblog_never_del=self.webpackChunkblog_never_del||[]).push([[553],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>f});var a=t(7294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},m=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var t=e.components,l=e.mdxType,i=e.originalType,s=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),p=c(t),f=l,d=p["".concat(s,".").concat(f)]||p[f]||u[f]||i;return t?a.createElement(d,r(r({ref:n},m),{},{components:t})):a.createElement(d,r({ref:n},m))}));function f(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var i=t.length,r=new Array(i);r[0]=p;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:l,r[1]=o;for(var c=2;c<i;c++)r[c]=t[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},6530:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var a=t(7462),l=(t(7294),t(3905));const i={sidebar_position:2930,title:"\ud83c\udfaa\ud83c\udfaa\ud83d\udc2c\u2638\ufe0f\u2638\ufe0f1\ufe0f\u20e3 Helm \u279c Demo"},r="Helm Demo",o={unversionedId:"\ud83c\udfaa\ud83c\udfaa \ud83d\udc2c\u2638\ufe0f\u2638\ufe0f-1\ufe0f\u20e3 Helm \u279c Demo",id:"\ud83c\udfaa\ud83c\udfaa \ud83d\udc2c\u2638\ufe0f\u2638\ufe0f-1\ufe0f\u20e3 Helm \u279c Demo",title:"\ud83c\udfaa\ud83c\udfaa\ud83d\udc2c\u2638\ufe0f\u2638\ufe0f1\ufe0f\u20e3 Helm \u279c Demo",description:"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35 Helm. demo. nginx",source:"@site/docs/\ud83c\udfaa\ud83c\udfaa \ud83d\udc2c\u2638\ufe0f\u2638\ufe0f-1\ufe0f\u20e3 Helm \u279c Demo.md",sourceDirName:".",slug:"/\ud83c\udfaa\ud83c\udfaa \ud83d\udc2c\u2638\ufe0f\u2638\ufe0f-1\ufe0f\u20e3 Helm \u279c Demo",permalink:"/\ud83c\udfaa\ud83c\udfaa \ud83d\udc2c\u2638\ufe0f\u2638\ufe0f-1\ufe0f\u20e3 Helm \u279c Demo",draft:!1,tags:[],version:"current",sidebarPosition:2930,frontMatter:{sidebar_position:2930,title:"\ud83c\udfaa\ud83c\udfaa\ud83d\udc2c\u2638\ufe0f\u2638\ufe0f1\ufe0f\u20e3 Helm \u279c Demo"},sidebar:"defaultSidebar",previous:{title:"\ud83c\udfaa\ud83c\udfaa\ud83d\udc2c\u2638\ufe0f\u2638\ufe0f1\ufe0f\u20e3 Helm \u279c Basic",permalink:"/\ud83c\udfaa\ud83c\udfaa \ud83d\udc2c\u2638\ufe0f\u2638\ufe0f-1\ufe0f\u20e3 Helm \u279c Basic"},next:{title:"\ud83c\udfaa\ud83c\udfaa\ud83d\udc2c\u2638\ufe0f\u2638\ufe0f3\ufe0f\u20e3 STO \u279c Basic",permalink:"/\ud83c\udfaa\ud83c\udfaa \ud83d\udc2c\u2638\ufe0f\u2638\ufe0f-3\ufe0f\u20e3 STO \u279c  Basic"}},s={},c=[],m={toc:c};function u(e){let{components:n,...t}=e;return(0,l.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"helm-demo"},"Helm Demo"),(0,l.kt)("p",null,"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35 Helm. demo. nginx "),(0,l.kt)("p",null,"\ud83d\udd35 search app"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"https://artifacthub.io/packages/search?kind=0&sort=relevance&page=1\n    https://artifacthub.io/packages/helm/bitnami/nginx\n")),(0,l.kt)("p",null,"\ud83d\udd35 install "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'helm repo add bitnami https://charts.bitnami.com/bitnami\nhelm install nginx-k3s bitnami/nginx\n\n    Error: INSTALLATION FAILED: Kubernetes cluster unreachable: Get "http://localhost:8080/version": dial tcp 127.0.0.1:8080: connect: connection refused\n\n        \ud83d\udd25 if use helm in k3s           export KUBECONFIG=/etc/rancher/k3s/k3s.yaml\n        \ud83d\udd25 if use helm in k3s           export KUBECONFIG=/etc/rancher/k3s/k3s.yaml\n            if need forever. all this to .zhsrc \n            then restart zsh.\n')),(0,l.kt)("p",null,"\ud83d\udd35 visit"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"\ud83d\udd36 check port \n\n    lens >> network >> services >> ..\n    kubectl get svc --namespace default -w name\n    kubectl get svc --namespace default -w nginx-k3s\n\n\n\ud83d\udd36 config firewall \n\n    ufw allow from 10.111.111.0/24 \n\n\n\ud83d\udd36 visit nginx\n\n    http://172.16.1.33:32674\n")),(0,l.kt)("p",null,"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\n\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\n\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35"),(0,l.kt)("p",null,"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35 \u274c\u274c\u274c\u274c\u274c\u274c\u274c\u274c"),(0,l.kt)("p",null,"\ud83d\udd35 Helm Demo \u279c Dashy  "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'https://artifacthub.io/packages/helm/krzwiatrzyk/dashy\n\n\nhelm repo add krzwiatrzyk https://krzwiatrzyk.github.io/charts/\nhelm install dashy-v1 krzwiatrzyk/dashy --version 0.0.3\nhelm status dashy-v1\n\n    \ud83d\udd25 if use helm in k3s           export KUBECONFIG=/etc/rancher/k3s/k3s.yaml\n    \ud83d\udd25 if use helm in k3s           export KUBECONFIG=/etc/rancher/k3s/k3s.yaml\n    \ud83d\udd25 if use helm in k3s           export KUBECONFIG=/etc/rancher/k3s/k3s.yaml\n\nhere our dashy not start. \n    some app like nginx no   need config         and  start success\n        \u279c use default config\n\n    some app like dashy must need config.        or   start fail \n        so how to config app like dashy?\n            every app diffs. -.-  check app`s config manual \n\n\n\ud83d\udd36 check manual \n\n    https://artifacthub.io/packages/helm/krzwiatrzyk/dashy\n\n    helm upgrade --install --set-file configMap.config.data."config\\.yml"=config.yml\n    helm upgrade --install --set-file configMap.config.data."config\\.yml"=cm-dashy-config.yml\n\n        --set-file configMap.config.data."config\\.yml"=xxxx.yml \n            \u279c left  part means this app neea a config file named: config.yml. \n            \u279c xxxx.yml means you can use your own name to overwrite the default filename. \n\n        so we create a compigmap file. named: cm-dashy-config.yml\n            then use belw cmd to import cm-dashy-config.yml as app`s config file\n                helm upgrade --install --set-file configMap.config.data."config\\.yml"=cm-dashy-config.yml\n')),(0,l.kt)("p",null,"\u274c \u274c\u274c\u274c\u274c\u274c\u274c"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'    kubectl create configmap cm-dashy-config.yaml --from-file=/root/dashy.conf\n    kubectl create configmap config.yaml --from-file=/root/dashy.conf\n\n\n    helm          install dashy-v1 krzwiatrzyk/dashy --version 0.0.3\n\n    helm upgrade --install --set-file configMap.config.data."config\\.yml"=cm-dashy-config.yml\n    helm upgrade --install --set-file configMap.config.data."config\\.yml"=cm-dashy-config.yml\n    helm upgrade dashy-v1 krzwiatrzyk/dashy --install --set-file configMap.config.data."config\\.yml"=cm-dashy-config.yaml\n\n\nsh.helm.release.v1.dashy-v1.v1\n\n\n\n\n\ud83d\udd36 create configmap \n\n\n\ud83d\udd25 it is volume.  not file  fuck \n\nMountVolume.SetUp failed for volume "config" : configmap references non-existent config key: conf.yml\n\nhelm  mount volume.. \n\n\n\n\n\nconfigmap:\nconfig:\n    enabled: true\n    data:\n    conf.yml: |\n        {{- .Files.Get "conf.yml" | nindent 4 }}\n\n# -- Probe configuration\n# -- [[ref]](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/)\n# @default -- See below\n\n\npersistence:\n# -- Default persistence for configuration files.\n# @default -- See below\nconfig:\n    # -- Enables or disables the persistence item\n    enabled: true\n\n    # -- Sets the persistence type\n    # Valid options are pvc, emptyDir, hostPath, secret, configMap or custom\n    type: configMap\n\n    # -- Where to mount the volume in the main container.\n    # Defaults to `/<name_of_the_volume>`,\n    # setting to \'-\' creates the volume but disables the volumeMount.\n    mountPath:  /app/public/conf.yml\n\n    # -- Used in conjunction with `existingClaim`. Specifies a sub-path inside the referenced volume instead of its root\n    subPath:  conf.yml\n    name: dashy-config\n    items:\n    - key: conf.yml\n    path: conf.yml\n')),(0,l.kt)("p",null,"\ud83d\udd35 volume "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Unable to attach or mount volumes: unmounted volumes=[config], unattached volumes=[config]: timed out waiting for the condition\n\n\n\n\npersistence:\n    config:\n    accessMode: ReadWriteOnce\n    enabled: false\n    readOnly: false\n    retain: false\n    size: 1Gi\n    type: pvc\n    shared:\n    enabled: false\n    mountPath: /shared\n    type: emptyDir\n\n\n    -.-\n")),(0,l.kt)("p",null,"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35 "),(0,l.kt)("p",null,"\ud83d\udd35 helm available valuse  "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"helm show values chart-name.  \u279c check what value can set .\nhelm show values krzwiatrzyk/dashy\n")),(0,l.kt)("p",null,"\ud83d\udd35 helm app Structure  "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"every helm app are same structure \n\nhelm-app\n    templates \n    chart.yaml \n    ...\n    value.yaml   # \ud83d\udd25 app`s default config value \n")),(0,l.kt)("p",null,"\ud83d\udd35 Helm app value: values.yaml "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"values.yaml  can overwrite template`s defaule value.\n\nyou can set values at:  helm install / helm upgrade. \nyou can set values use: values.yaml \n")),(0,l.kt)("p",null,"\ud83d\udd35 Helm APP Custom "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"almost all app need some config. \n    - set value. \n    - mount config file \n    - expose port\n\nin helm. need two part.\n    -f xxx.yaml \u279c use   custom value  file \u279c change app`s defaule setting \n    --set-file  \u279c mount custom config file \u279c like nginx.conf\n\n        helm install --dry-run --debug \\\n        stable/rabbitmq \\\n        --name testrmq \\\n        --namespace rmq \\\n        -f rabbit-values.yaml \\\n        --set-file rabbitmq.advancedConfig=rabbitmq.config\n    \nwe manybe no need change app`s default value.\nbut most time need. mount custom config.\n")),(0,l.kt)("p",null,"\ud83d\udd35 Helm Custom \u279c config "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'\ud83d\udd36 check default value \n\n    we want change an helm app`s config.\n    need konw app`s default setting first.\n    this can check in website \n        https://artifacthub.io/packages/helm/krzwiatrzyk/dashy\n        https://artifacthub.io/packages/helm/krzwiatrzyk/dashy?modal=values\n\n\n\ud83d\udd36 analy default value \n\n    configmap:\n        config:\n            enabled: true\n            data:\n                conf.yml: |\n                    {{- .Files.Get "conf.yml" | nindent 4 }}\n\n    helm upgrade --install --set-file configMap.config.data."config\\.yml"=config.yml\n\n    it need a custom file: named :  config.yml   prepair first.\n    but i want change the filename:   cm-dashy.yaml \n        so i need change default value first. \n        how overwrite heml `s defalt value.\n')),(0,l.kt)("p",null,"\ud83d\udd35 Helm overwrite default value"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'the app`s default custom filename is  config.yml \nwe want change it to cm-appname-config.yml \n\nin helm we can use --set flag to overwrite a value.\n\nhelm upgrade --install <service>-green -f <service>-values.yaml <service>-100.0.112+xxxx.tgz --set <service>.deployment.strategy=blue-green\nhelm upgrade --install <service>       -f <service>-values.yaml <service>-100.0.112+xxxx.tgz --set <service>.image.tag=9.0.1xx.xx.xx\n\n\nhelm upgrade --install --set-file configMap.config.data."config\\.yml"=config.yml\nhelm upgrade --install --set-file configMap.config.data."config\\.yml"=cm-dashy-config.yml\n\n\n\n\n\n    we need use \n\n\nhelm install --dry-run --debug \\\n    stable/rabbitmq \\\n    --name testrmq \\\n    --namespace rmq \\\n    -f rabbit-values.yaml \\\n    --set-file rabbitmq.advancedConfig=rabbitmq.config\n')),(0,l.kt)("p",null,"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35 helm demo nginx\n\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35 helm demo nginx\n\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35 helm demo nginx "),(0,l.kt)("p",null,"\ud83d\udd35 Mount Config "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"in docker we use volumes when start docker\n    volumes:\n        - ./license.dat:/etc/sys0/license.dat\n        - ./config.json:/etc/sys0/config.json\n\n\nin k8s/helm same \n\n    helm install my-nginx                            bitnami/nginx\n    helm install my-nginx -f values.yaml             bitnami/nginx\n    helm install my-nginx --set ingress.enabled=true bitnami/nginx\n\n\nor better change config use values.yaml.\nand run app use your own value.yaml.\nall value you can use in docker cmd.\nyou can set them into value.yaml \n\n\n\n\ud83d\udd36 value.yaml\n")))}u.isMDXComponent=!0}}]);
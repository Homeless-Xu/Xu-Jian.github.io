"use strict";(self.webpackChunkblog_never_del=self.webpackChunkblog_never_del||[]).push([[7930],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=r.createContext({}),i=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=i(e.components);return r.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=i(t),m=o,k=d["".concat(p,".").concat(m)]||d[m]||u[m]||a;return t?r.createElement(k,l(l({ref:n},c),{},{components:t})):r.createElement(k,l({ref:n},c))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,l=new Array(a);l[0]=d;var s={};for(var p in n)hasOwnProperty.call(n,p)&&(s[p]=n[p]);s.originalType=e,s.mdxType="string"==typeof e?e:o,l[1]=s;for(var i=2;i<a;i++)l[i]=t[i];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},1672:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>i});var r=t(7462),o=(t(7294),t(3905));const a={sidebar_position:2930,title:"\ud83c\udfaa\ud83c\udfaa\ud83d\udc2c\u2638\ufe0f\u2638\ufe0f0\ufe0f\u20e3 K8s \u279c Basic"},l="K8s \u2736 Basic",s={unversionedId:"\ud83c\udfaa\ud83c\udfaa \ud83d\udc2c\u2638\ufe0f\u2638\ufe0f-0\ufe0f\u20e3 K8s \u279c Basic.1",id:"\ud83c\udfaa\ud83c\udfaa \ud83d\udc2c\u2638\ufe0f\u2638\ufe0f-0\ufe0f\u20e3 K8s \u279c Basic.1",title:"\ud83c\udfaa\ud83c\udfaa\ud83d\udc2c\u2638\ufe0f\u2638\ufe0f0\ufe0f\u20e3 K8s \u279c Basic",description:"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35 yaml  \u2705",source:"@site/docs/\ud83c\udfaa\ud83c\udfaa \ud83d\udc2c\u2638\ufe0f\u2638\ufe0f-0\ufe0f\u20e3 K8s \u279c Basic.1.md",sourceDirName:".",slug:"/\ud83c\udfaa\ud83c\udfaa \ud83d\udc2c\u2638\ufe0f\u2638\ufe0f-0\ufe0f\u20e3 K8s \u279c Basic.1",permalink:"/\ud83c\udfaa\ud83c\udfaa \ud83d\udc2c\u2638\ufe0f\u2638\ufe0f-0\ufe0f\u20e3 K8s \u279c Basic.1",draft:!1,tags:[],version:"current",sidebarPosition:2930,frontMatter:{sidebar_position:2930,title:"\ud83c\udfaa\ud83c\udfaa\ud83d\udc2c\u2638\ufe0f\u2638\ufe0f0\ufe0f\u20e3 K8s \u279c Basic"},sidebar:"defaultSidebar",previous:{title:"\ud83c\udfaa\ud83c\udfaa\ud83d\udc2c\u2638\ufe0f Cluster \u279c\u279c\u279c K8s",permalink:"/\ud83c\udfaa\ud83c\udfaa \ud83d\udc2c\u2638\ufe0f Cluster \u279c\u279c\u279c K8s"},next:{title:"\ud83c\udfaa\ud83c\udfaa\ud83d\udc2c\u2638\ufe0f\u2638\ufe0f0\ufe0f\u20e3 K8s \u279c Misc.9",permalink:"/\ud83c\udfaa\ud83c\udfaa \ud83d\udc2c\u2638\ufe0f\u2638\ufe0f-0\ufe0f\u20e3 K8s \u279c Basic.9 Misc"}},p={},i=[],c={toc:i};function u(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"k8s--basic"},"K8s \u2736 Basic"),(0,o.kt)("p",null,"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35 yaml  \u2705\n\ud83d\udd35 why yaml "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"you can create pod use kubectl \u279c  like create docker use cmd\nbest choose is use yaml  file  \u279c  like docker-compose.yaml \n\nin linux everything is file \nin k8s   everything is yaml\n\n    even driver need use yaml too like ceph-csi storage driver. \n\n      create a xx.yaml for pod, \n        kubectl create -f xx.yaml\n          to run that pod\n")),(0,o.kt)("p",null,"\ud83d\udd35 yarm Demo "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"K3s ~ cat proxy-traefik.yaml \napiVersion: traefik.containo.us/v1alpha1\nkind: IngressRoute\nmetadata:\n  name: dashboard\nspec:\n  entryPoints:\n    - web\n  routes:\n    - match: Host() && (PathPrefix() || PathPrefix())\n      kind: Rule\n      services:\n        - name: api@internal\n          kind: TraefikService\n")),(0,o.kt)("p",null,"\ud83d\udd35 yarm desc "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"yarm have two parts:\n    yarm.top:     controler config \u279c  k8s config. \n    yarm.other:   controled config \u279c  pod config. \n\n\napiVersion: xxxx     # k8s api version \u279c kubectl api-versions \nkind: xxxx           # most deployment. \nmetadata:\n  name: xxx\n  namespace: xxxx   # choose namespace \nspec:\n  replicas: xx       # how many copys. \n  selector:\n\n  template           # pod config blow \n    metadata:\n    spec:\n      containers\n")),(0,o.kt)("p",null,"\ud83d\udd35 export yaml file  \u2705"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"we no need to create yaml all by ourself. \njust need export a yaml and change some config\n\n  \u25ce kubectl create  \u279c export yaml from no installed  pod\n  \u25ce kubectl get     \u279c export yaml from installed     pod\n\n\n  all kubectl cmd can export yaml, just add -o yaml \u203c\ufe0f \n\n\n    kubectl create deployment web --image=nginx --dry-run -o yaml \n    kubectl create deployment web --image=nginx --dry-run -o yaml > web.yaml\n\n    kubectl get deploy csi-rbdplugin-provisioner -o=yaml\n    kubectl get deploy csi-rbdplugin-provisioner -o=yaml --export > demo.yaml\n\n    kubectl expose deployment web --port=80 type=NodePort --target-port=80 --name=webxx  -o yaml\n    kubectl expose deployment web --port=80 type=NodePort --target-port=80 --name=webxx  -o yaml > xx.yaml\n")),(0,o.kt)("hr",null),(0,o.kt)("p",null,"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35 POD  \u2705"),(0,o.kt)("p",null,"\ud83d\udd35 why pod "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"k8s is for manager app/pod\nbut some app need many container work together.\nand those container under one app must need in same host/node.\nif k8s need move one container in that app. k8s must move all container of that app.\n\none pod is like one vm: virtual machine.\nall container under one vm can connect each other.\n")),(0,o.kt)("p",null,"\ud83d\udd35 Pod Desc "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"POD = Connect Multi namespace & cgroup.\nmeans Connect Milti Container Together \n\nContaineres under same POD. can connect each other ! \nContaineres under same POD. like under same host/machine ! \n\nif app need more than one Containeres to work.\nso best way is make those Containeres use same POD. \ngive every app a different pod.\n\n\n\ud83d\udd36 pod simple \n\n  k8s manager app(pod)\n      one app = one or more container \n        all container under same pod use same network & storage \n")),(0,o.kt)("p",null,"\ud83d\udd35 pod config "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"image   control \nrestart control   \nsource  control   \u279c  set/limit   cpu & ram\n\nhealth  check     \u279c  docker runs not means service runs. \n                      \u279c  health check not check pod status, \n                          \u279c check your real service status inside pod.\n                  \n")),(0,o.kt)("p",null,"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35 Node Choose \u2705"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"https://www.youtube.com/watch?v=PQHjwA2qZdQ&list=PLmOn9nNkQxJHYUm2zkuf9_7XJJT8kzAph&index=28&ab_channel=%E5%B0%9A%E7%A1%85%E8%B0%B7IT%E5%9F%B9%E8%AE%AD%E5%AD%A6%E6%A0%A1\n")),(0,o.kt)("p",null,"\ud83d\udd35 how k8s choose node "),(0,o.kt)("p",null,"  manual choose node:   node name\nAuto   Choose Node:   resource  /  nodeSelector  /  nodeAffinity "),(0,o.kt)("p",null,"\ud83d\udd35 node name "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"apiVersion: v1\nkind: Pod\nmetadata:\n    name: nginx\nspec:\n    nodeName: foo-node # use this node \n")),(0,o.kt)("p",null,"\ud83d\udd35 node selector "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"one k8s cluster have lots nodes.\n    some nodes for prod env.  \n    some nodes for test env.\nk8s allow you choose node for pod. \n\nfirst give role to your k8s node.  then let pod choose a role. \n")),(0,o.kt)("p",null,"  \ud83d\udd36 get node "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"  kubectl get node\n  NAME      STATUS   ROLES                  AGE     VERSION\n  k3s.vps   Ready    <none>                 4m23s   v1.24.2+k3s2\n  k3s.mgr   Ready    control-plane,master   2m30s   v1.24.2+k3s2\n  k3s.dkt   Ready    <none>                 10m     v1.24.2+k3s2\n")),(0,o.kt)("p",null,"  \ud83d\udd36 set env_role "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"  kubectl label node k3s.mgr env_role=lan-main\n  kubectl label node k3s.dkt env_role=lan-test\n  kubectl label node k3s.vps env_role=wan-proxy\n")),(0,o.kt)("p",null,"  \ud83d\udd36 check env_role\nkubectl get nodes --show-labels"),(0,o.kt)("p",null,"  \ud83d\udd36 use role "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"spec:\n  nodeSelector:\n    env_role: lan-main\n")),(0,o.kt)("hr",null),(0,o.kt)("p",null,"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35 Controller Kind"),(0,o.kt)("p",null,"\ud83d\udd35 why need controller. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"controller. can control app even after app deployed.\n    change   copy numbers / replicas \n    update   pod  image\n    rollback old  version \n    ....\n")),(0,o.kt)("p",null,"\ud83d\udd35 controller & pod "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"controller  use label to control pod. \nso put same label in both control and pod \n\n\nDeployment is one of the controller use most. \n\n\n    apiVersion: apps/v1\n    kind: Deployment\n    metadata:\n    spec:\n    replicas: 1\n    selector:\n        matchLabels:\n        app: web    \u279c \ud83d\udccd\n    strategy: {}\n    template:\n        metadata:\n        creationTimestamp: null\n        labels:\n            app: web  \u279c  \ud83d\udccd\n")),(0,o.kt)("p",null,"\ud83d\udd35 Controller.kind \u279c deployment "),(0,o.kt)("p",null,"\ud83d\udd35 Controller.kind \u279c daemonset "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"let every node run some pod. \nlike log agent. need install to every node.\n")),(0,o.kt)("p",null,"\ud83d\udd35 Controller.kind \u279c job & cronjob "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"job     \u279c one time job\ncronjob \u279c repeat job many times. \n")),(0,o.kt)("p",null,"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35 Service  "),(0,o.kt)("p",null,"\ud83d\udd35 Why Service  "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"service is like firewall. all lan/wan traffic need setup firewall/service  first.\nservice is like firewall. all lan/wan traffic need setup firewall/service  first.\nservice is like firewall. all lan/wan traffic need setup firewall/service  first.\n    any lan traffic ( inside  cluster )\n    any wan traffic ( outside cluster )\n    \n")),(0,o.kt)("p",null,"\ud83d\udd35 Service Desc "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"after you deploy your app to k8s, next is visit our app! \n\nk8s give every pod a virtual ip. \nso pods inside k8s can visit each other.\n\nbut you can`t. you are not pods, you are not a part of k8s cluster.\nif your web broswer need visit app. \nyou need setup service first.\nservice can help you visit pods inside k8s cluster.\n\nService put all pods together.\nyou visit service. you visit all pods under service.\nit is a bridge between you (out cluster) to pods(in cluster)\n")),(0,o.kt)("p",null,"\ud83d\udd35 Stateful VS Stateless \u2705"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"one app:  many copy.\nit is something about copy under one app. \n\nstate less \u279c all copy under one app. is     same. \nstate ful  \u279c all cpoy under one app. is not same. \n\n\napp-mysql:   mysql-pod-master + mysql-pod-slave.\n    this two pod are not same! \n    must run master first. then run slave.\n\napp-nginx \n    nginx is for load balance.  no master. all pod is equel. \n    so this is state less \n\n\n\nStateful:   every copy have a different pod name \nStateless:  every copy have a same      pod name \n\n\n\n\nStateful  \u279c use statefulSet to deploy pod\nstateless \u279c use deployment  to deploy pod \u279c nginx usual use deployment.\n")),(0,o.kt)("p",null,"\ud83d\udd35 Service Mode "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"ClusterIP:              LAN Traffic    \u279c inside  cluster <> inside  cluster \nNodePort:               WAN Traffic    \u279c inside  cluster <> outsied cluster \nNodePort.LoadBalance:                  \u279c use proxy like nginx/traefik.\n\n\nNodePort:      clusterIp: yes + internal port + host port\nClusterIP:     clusterIp: yes + internal port\nHeadless       clusterIp: no                              \u279c allow you custom config ip. \n")),(0,o.kt)("p",null,"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35 Secret "),(0,o.kt)("p",null,"\ud83d\udd35 why "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"a lot app need set password.\ncreate mysql need set mysql password.\n\nin docker-compose we just write passwrod in config. not safe..\nk8s use secret to keep your username & password safe.\n\n\n\nhttps://www.youtube.com/watch?v=qxaKQY1qiNc&list=PLmOn9nNkQxJHYUm2zkuf9_7XJJT8kzAph&index=38&ab_channel=%E5%B0%9A%E7%A1%85%E8%B0%B7IT%E5%9F%B9%E8%AE%AD%E5%AD%A6%E6%A0%A1\n")),(0,o.kt)("p",null,"\ud83d\udd35 create secret "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"create secret-xxx.yaml\nput use name passwd in it. \napply secret-xxx.yaml\nthen your username & password is saved to k8s. \nkubectl get secret to check.\n")),(0,o.kt)("p",null,"\ud83d\udd35 use secret "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"- use variable \n- mount volume \n")),(0,o.kt)("p",null,"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35 ConfigMAP "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"https://www.youtube.com/watch?v=MymwImXFUz4&list=PLmOn9nNkQxJHYUm2zkuf9_7XJJT8kzAph&index=39&ab_channel=%E5%B0%9A%E7%A1%85%E8%B0%B7IT%E5%9F%B9%E8%AE%AD%E5%AD%A6%E6%A0%A1\n")),(0,o.kt)("p",null,"\ud83d\udd35 why "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"docker-compose use xx.yaml to save all docker cmd.\nk8s use configmap to save like hostname/port\n\nconfigmap:  save normal   info \nsecret   :  save password info\n")),(0,o.kt)("p",null,"\ud83d\udd35 create configmap "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"redis.host=redis\nredis.port=1111\n")),(0,o.kt)("p",null,"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35 Ingress (router)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"https://www.youtube.com/watch?v=ntLJxQbN3O8&list=PLmOn9nNkQxJHYUm2zkuf9_7XJJT8kzAph&index=44&ab_channel=%E5%B0%9A%E7%A1%85%E8%B0%B7IT%E5%9F%B9%E8%AE%AD%E5%AD%A6%E6%A0%A1\n")),(0,o.kt)("p",null,"\ud83d\udd35 Why Ingress  "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"node port.  only avail on one node! \nnode port. use ip.  in reality we use url.\n\ningress is based on nodeport. make it more better.\ningress is like router.\n")),(0,o.kt)("p",null,"\ud83d\udd35 ingress workflow "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\u25ce config nodeport first\n\n\u25ce choose  route (choose ingress gateway)   \u279c   nginx/traefik \n\u25ce install route (deploy ingress gateway)   \u279c   nginx/traefik \n\n\u25ce config router(ingress rule   )   \u279c   config nginx/traefik\n")))}u.isMDXComponent=!0}}]);
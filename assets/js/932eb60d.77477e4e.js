"use strict";(self.webpackChunkblog_never_del=self.webpackChunkblog_never_del||[]).push([[757],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),i=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=i(e.components);return o.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=i(n),m=r,k=u["".concat(s,".").concat(m)]||u[m]||d[m]||a;return n?o.createElement(k,l(l({ref:t},c),{},{components:n})):o.createElement(k,l({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=u;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:r,l[1]=p;for(var i=2;i<a;i++)l[i]=n[i];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7937:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>p,toc:()=>i});var o=n(7462),r=(n(7294),n(3905));const a={sidebar_position:2930,title:"\ud83c\udfaa\ud83c\udfaa\ud83d\udc2c\u2638\ufe0f\u2638\ufe0f\u2638\ufe0f Demo \u279c \u274c"},l="K8s Real Demo \u279c",p={unversionedId:"\ud83c\udfaa\ud83c\udfaa \ud83d\udc2c\u2638\ufe0f\u2638\ufe0f\u2638\ufe0f Demo \u279c xxx",id:"\ud83c\udfaa\ud83c\udfaa \ud83d\udc2c\u2638\ufe0f\u2638\ufe0f\u2638\ufe0f Demo \u279c xxx",title:"\ud83c\udfaa\ud83c\udfaa\ud83d\udc2c\u2638\ufe0f\u2638\ufe0f\u2638\ufe0f Demo \u279c \u274c",description:"\ud83d\udd35 todo",source:"@site/docs/\ud83c\udfaa\ud83c\udfaa \ud83d\udc2c\u2638\ufe0f\u2638\ufe0f\u2638\ufe0f Demo \u279c xxx.md",sourceDirName:".",slug:"/\ud83c\udfaa\ud83c\udfaa \ud83d\udc2c\u2638\ufe0f\u2638\ufe0f\u2638\ufe0f Demo \u279c xxx",permalink:"/\ud83c\udfaa\ud83c\udfaa \ud83d\udc2c\u2638\ufe0f\u2638\ufe0f\u2638\ufe0f Demo \u279c xxx",draft:!1,tags:[],version:"current",sidebarPosition:2930,frontMatter:{sidebar_position:2930,title:"\ud83c\udfaa\ud83c\udfaa\ud83d\udc2c\u2638\ufe0f\u2638\ufe0f\u2638\ufe0f Demo \u279c \u274c"},sidebar:"defaultSidebar",previous:{title:"\ud83c\udfaa\ud83c\udfaa\ud83d\udc2c\u2638\ufe0f\u2638\ufe0f5\ufe0f\u20e3 NET \u279c Basic",permalink:"/\ud83c\udfaa\ud83c\udfaa \ud83d\udc2c\u2638\ufe0f\u2638\ufe0f-5\ufe0f\u20e3 NET \u279c"}},s={},i=[],c={toc:i};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"k8s-real-demo-"},"K8s Real Demo \u279c"),(0,r.kt)("p",null,"\ud83d\udd35 todo\nmove all docker-compose to k3s/k8s "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'fa9928b172e1   jumpserver/jms_all:latest          "./entrypoint.sh"        2 days ago      Up 2 hours                                                                            APP-Jumpserver\nca4884bacf92   ghcr.io/requarks/wiki:2            "docker-entrypoint.s\u2026"   2 days ago      Up 10 seconds                                                                         NoteWikijs\n3aefa5a3e0be   minio/minio:latest                 "/usr/bin/docker-ent\u2026"   2 days ago      Up 2 hours                                                                            STO-S3-MinIO\n6befd0f41f87   postgres:latest                    "docker-entrypoint.s\u2026"   2 days ago      Up 2 hours                     0.0.0.0:5432->5432/tcp, :::5432->5432/tcp              DB-Postgres-DKP\nbb833dc88257   gravitl/netclient:v0.14.3          "/bin/bash ./netclie\u2026"   2 days ago      Restarting (0) 7 seconds ago                                                          VPN-NetmakerCLI-DKP\n236ed4f2807a   mysql:latest                       "docker-entrypoint.s\u2026"   2 days ago      Up 2 hours                     0.0.0.0:3306->3306/tcp, :::3306->3306/tcp, 33060/tcp   DB-MySQL-DKP\n60f41c6b1851   linuxserver/heimdall               "/init"                  2 days ago      Up 2 hours                                                                            DashBoard-Heimdall\na8cf52dcd68f   travelping/nettools:latest         "tail -F anything"       2 days ago      Up 2 hours                                                                            Net-Debug-ToolBOX\n409a1fd3a37c   gitea/gitea:latest                 "/usr/bin/entrypoint\u2026"   2 days ago      Up 10 seconds                                                                         APP-Gitea-dkp\n077cdb28bdb2   traefik:latest                     "/entrypoint.sh --lo\u2026"   2 days ago      Up 2 hours\n')),(0,r.kt)("p",null,"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35 k3s prepair "),(0,r.kt)("p",null,"\ud83d\udd35 namespace "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"ns-app\nns-db\nns-tool\nns-proxy\n")),(0,r.kt)("p",null,"\ud83d\udd35 network "),(0,r.kt)("p",null,"\ud83d\udd35 storage "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"default:     local-path \nceph pvc \n")),(0,r.kt)("p",null,"sto-sc-cephcsi-rbd-K3s"),(0,r.kt)("p",null,"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35 mysql - heml  \u274c "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"https://artifacthub.io/packages/helm/bitnami/mysql\n\n\nhelm repo add bitnami https://charts.bitnami.com/bitnami\n\nhelm install my-release bitnami/mysql\nhelm install mysql-test bitnami/mysql --namespace ns-db --set global.storageClass=local-path\n")),(0,r.kt)("p",null,"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35 nettools "),(0,r.kt)("p",null,"\ud83d\udd35 docker compose demo "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"netdebug:\n    container_name: Net-Debug-ToolBOX\n    image: travelping/nettools:latest\n    restart: always\n    command: tail -F anything\n        # keep docker running.   \n        # some docker no have task. will auto shutdown.\n")),(0,r.kt)("p",null,"\ud83d\udd35 K8s - CMD "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"kubectl run netdebug --image=travelping/nettools -- sleep infinity  \u2705\n")),(0,r.kt)("p",null,"\ud83d\udd35 k8s - yml "),(0,r.kt)("p",null,"\ud83d\udd36 create namespace:      ns-tool-net\n\ud83d\udd36 create pod  yaml:      toolNetNettoolsPod.yaml"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'apiVersion: v3\nkind: Pod\nmetadata:\nname: toolNetNettoolsPod\nnamespace: ns-tool-net\nspec:\ncontainers:\n- name: toolNetNettoolsPod\n    image: travelping/nettools:latest\n    command:\n    - sleep\n    - "infinity"\n    imagePullPolicy: IfNotPresent\nrestartPolicy: Never\n')),(0,r.kt)("p",null,"\ud83d\udd36 apply      \u279c        kubectl apply -f /mnt/tool-net-nettools-pod.yaml"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'pod/tool-net-nettools-pod created\n\n\nFailed to create pod sandbox: rpc error: code = Unknown desc = failed to start sandbox container for pod "tool-net-nettools-pod": E\nrror response from daemon: \nfailed to update store for object type *libnetwork.endpointCnt: Key not found in store\n')),(0,r.kt)("p",null,"\ud83d\udd36 1. import to configmap ."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"kubectl run -it --image=jrecord/nettools nettools --restart=Never --namespace=default\n\n\n\n\nkubectl apply -f nettools.yaml\n")),(0,r.kt)("p",null,"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35 K8s \u2736 Nginx  \u2705"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"\ud83d\udd36 Deploy               kubectl create deployment nginx --image=nginx\n\ud83d\udd36 Export server Port   kubectl expose deployment nginx --port=80 --type=NodePort\n\ud83d\udd36 Check local Port     kubectl get svc\n\ud83d\udd36 Visit                http://172.16.0.80:32461/\n")),(0,r.kt)("p",null,"==\n\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35 Docker \u2736 NetBox \u2705 "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"\ud83d\udd35 Docker Netbox \u2705\n\n    \u2b50\ufe0f\u2b50\ufe0f\u2b50\ufe0f\u2b50\ufe0f\u2b50\ufe0f\n    https://computingforgeeks.com/how-to-run-netbox-ipam-tool-in-docker-containers/\n\n\n    \u2b50\ufe0f\u2b50\ufe0f\u2b50\ufe0f - offical manual.\n    https://github.com/netbox-community/netbox-docker\n\n    docker-compose up -d\n    web:    8000\n    admin / admin  \n")),(0,r.kt)("p",null,"=="),(0,r.kt)("h1",{id:"-k8s--netbox-"},"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35 K8s \u2736 NetBox \u274c"),(0,r.kt)("p",null,"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35 K8s_Local \u2736 Net-Tool  \u2705"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"\ud83d\udd35 Docker Demo \n\n    \ud83d\udd36 Desc \n\n        a docker with net tooles.\n        good for test network/debug \n\n    \ud83d\udd36 Run \n\n        docker run -dt travelping/nettools\n\n\n\ud83d\udd35 Minikube Demo \n\n    \ud83d\udd36 run \n\n        kubectl create deployment netdebug --image=travelping/nettools      \u274c\n        kubectl run netdebug --image=travelping/nettools -- sleep infinity  \u2705\n\n            \u203c\ufe0f docker must have a task that will never finish. or docker will auto stop it \u203c\ufe0f\n            \u203c\ufe0f docker must have a task that will never finish. or docker will auto stop it \u203c\ufe0f\n            \u203c\ufe0f docker must have a task that will never finish. or docker will auto stop it \u203c\ufe0f\n\n\n    \ud83d\udd36 enter docker \n\n        kubectl exec <podname> -it -- bash\n        kubectl exec netdebug -it -- bash\n")),(0,r.kt)("p",null,"\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35\ud83d\udd35 Misc "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'kubectl run my-app --image=gcr.io/some-repo/my-app:v1 --port=3000\n\n$ kubectl expose deployment my-app --type=LoadBalancer --port=8080 --target-port=3000\nservice "my-app" exposed\n')))}d.isMDXComponent=!0}}]);